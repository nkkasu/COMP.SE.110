/*
 * Digitraffic Road API
 * [OpenAPI document](/swagger/openapi.json)   Digitraffic is a service operated by the [Fintraffic](https://www.fintraffic.fi) offering real time traffic information. Currently the service covers *road, marine and rail* traffic. More information can be found at the [Digitraffic website](https://www.digitraffic.fi/)   The service has a public Google-group [road.digitraffic.fi](https://groups.google.com/forum/#!forum/roaddigitrafficfi) for communication between developers, service administrators and Fintraffic. The discussion in the forum is mostly in Finnish, but you're welcome to communicate in English too.   ### General notes of the API * Many Digitraffic APIs use GeoJSON as data format. Definition of the GeoJSON format can be found at https://tools.ietf.org/html/rfc7946. * For dates and times [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format is used with \"Zulu\" zero offset from UTC unless otherwise specified (i.e., \"yyyy-mm-ddThh:mm:ss[.mmm]Z\"). E.g. 2019-11-01T06:30:00Z.
 *
 * The version of the OpenAPI document: 2.94.0#e017ffd@2022-10-18T07:48:28+0000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fi.tuni.monitor.roadapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fi.tuni.monitor.roadapi.model.WeathercamPresetDirectionV1;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Camera preset
 */
@ApiModel(description = "Camera preset")
@JsonPropertyOrder({
  CameraPreset.JSON_PROPERTY_PRESET_ID,
  CameraPreset.JSON_PROPERTY_CAMERA_ID,
  CameraPreset.JSON_PROPERTY_PRESENTATION_NAME,
  CameraPreset.JSON_PROPERTY_IN_COLLECTION,
  CameraPreset.JSON_PROPERTY_RESOLUTION,
  CameraPreset.JSON_PROPERTY_DIRECTION_CODE,
  CameraPreset.JSON_PROPERTY_IMAGE_URL,
  CameraPreset.JSON_PROPERTY_DIRECTION
})
public class CameraPreset {
  public static final String JSON_PROPERTY_PRESET_ID = "presetId";
  private String presetId;

  public static final String JSON_PROPERTY_CAMERA_ID = "cameraId";
  private String cameraId;

  public static final String JSON_PROPERTY_PRESENTATION_NAME = "presentationName";
  private String presentationName;

  public static final String JSON_PROPERTY_IN_COLLECTION = "inCollection";
  private Boolean inCollection;

  public static final String JSON_PROPERTY_RESOLUTION = "resolution";
  private String resolution;

  public static final String JSON_PROPERTY_DIRECTION_CODE = "directionCode";
  private String directionCode;

  public static final String JSON_PROPERTY_IMAGE_URL = "imageUrl";
  private String imageUrl;

  public static final String JSON_PROPERTY_DIRECTION = "direction";
  private WeathercamPresetDirectionV1 direction = WeathercamPresetDirectionV1.UNKNOWN;

  public CameraPreset() {
  }

  public CameraPreset presetId(String presetId) {
    
    this.presetId = presetId;
    return this;
  }

   /**
   * Camera preset id
   * @return presetId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Camera preset id")
  @JsonProperty(JSON_PROPERTY_PRESET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPresetId() {
    return presetId;
  }


  @JsonProperty(JSON_PROPERTY_PRESET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPresetId(String presetId) {
    this.presetId = presetId;
  }


  public CameraPreset cameraId(String cameraId) {
    
    this.cameraId = cameraId;
    return this;
  }

   /**
   * Camera id
   * @return cameraId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Camera id")
  @JsonProperty(JSON_PROPERTY_CAMERA_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCameraId() {
    return cameraId;
  }


  @JsonProperty(JSON_PROPERTY_CAMERA_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCameraId(String cameraId) {
    this.cameraId = cameraId;
  }


  public CameraPreset presentationName(String presentationName) {
    
    this.presentationName = presentationName;
    return this;
  }

   /**
   * PresentationName (Preset name 1, direction)
   * @return presentationName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "PresentationName (Preset name 1, direction)")
  @JsonProperty(JSON_PROPERTY_PRESENTATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPresentationName() {
    return presentationName;
  }


  @JsonProperty(JSON_PROPERTY_PRESENTATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPresentationName(String presentationName) {
    this.presentationName = presentationName;
  }


  public CameraPreset inCollection(Boolean inCollection) {
    
    this.inCollection = inCollection;
    return this;
  }

   /**
   * Is data in collection
   * @return inCollection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Is data in collection")
  @JsonProperty(JSON_PROPERTY_IN_COLLECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getInCollection() {
    return inCollection;
  }


  @JsonProperty(JSON_PROPERTY_IN_COLLECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInCollection(Boolean inCollection) {
    this.inCollection = inCollection;
  }


  public CameraPreset resolution(String resolution) {
    
    this.resolution = resolution;
    return this;
  }

   /**
   * Resolution of camera [px x px]
   * @return resolution
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Resolution of camera [px x px]")
  @JsonProperty(JSON_PROPERTY_RESOLUTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResolution() {
    return resolution;
  }


  @JsonProperty(JSON_PROPERTY_RESOLUTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResolution(String resolution) {
    this.resolution = resolution;
  }


  public CameraPreset directionCode(String directionCode) {
    
    this.directionCode = directionCode;
    return this;
  }

   /**
   * Preset direction 0 &#x3D; Unknown direction.  1 &#x3D; According to the road register address increasing direction. I.e. on the road 4 to Lahti, if we are in Korso.  2 &#x3D; According to the road register address decreasing direction. I.e. on the road 4 to Helsinki, if we are in Korso.  3 &#x3D; Increasing direction of the crossing road.  4 &#x3D; Decreasing direction of the crossing road. 5-99 &#x3D; Special directions
   * @return directionCode
  **/
 
  @ApiModelProperty(required = true, value = "Preset direction 0 = Unknown direction.  1 = According to the road register address increasing direction. I.e. on the road 4 to Lahti, if we are in Korso.  2 = According to the road register address decreasing direction. I.e. on the road 4 to Helsinki, if we are in Korso.  3 = Increasing direction of the crossing road.  4 = Decreasing direction of the crossing road. 5-99 = Special directions")
  @JsonProperty(JSON_PROPERTY_DIRECTION_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDirectionCode() {
    return directionCode;
  }


  @JsonProperty(JSON_PROPERTY_DIRECTION_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDirectionCode(String directionCode) {
    this.directionCode = directionCode;
  }


  public CameraPreset imageUrl(String imageUrl) {
    
    this.imageUrl = imageUrl;
    return this;
  }

   /**
   * Image url
   * @return imageUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Image url")
  @JsonProperty(JSON_PROPERTY_IMAGE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImageUrl() {
    return imageUrl;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }


  public CameraPreset direction(WeathercamPresetDirectionV1 direction) {
    
    this.direction = direction;
    return this;
  }

   /**
   * Get direction
   * @return direction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public WeathercamPresetDirectionV1 getDirection() {
    return direction;
  }


  @JsonProperty(JSON_PROPERTY_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDirection(WeathercamPresetDirectionV1 direction) {
    this.direction = direction;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CameraPreset cameraPreset = (CameraPreset) o;
    return Objects.equals(this.presetId, cameraPreset.presetId) &&
        Objects.equals(this.cameraId, cameraPreset.cameraId) &&
        Objects.equals(this.presentationName, cameraPreset.presentationName) &&
        Objects.equals(this.inCollection, cameraPreset.inCollection) &&
        Objects.equals(this.resolution, cameraPreset.resolution) &&
        Objects.equals(this.directionCode, cameraPreset.directionCode) &&
        Objects.equals(this.imageUrl, cameraPreset.imageUrl) &&
        Objects.equals(this.direction, cameraPreset.direction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(presetId, cameraId, presentationName, inCollection, resolution, directionCode, imageUrl, direction);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CameraPreset {\n");
    sb.append("    presetId: ").append(toIndentedString(presetId)).append("\n");
    sb.append("    cameraId: ").append(toIndentedString(cameraId)).append("\n");
    sb.append("    presentationName: ").append(toIndentedString(presentationName)).append("\n");
    sb.append("    inCollection: ").append(toIndentedString(inCollection)).append("\n");
    sb.append("    resolution: ").append(toIndentedString(resolution)).append("\n");
    sb.append("    directionCode: ").append(toIndentedString(directionCode)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

