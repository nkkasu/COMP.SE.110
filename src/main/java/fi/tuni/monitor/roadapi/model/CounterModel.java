/*
 * Digitraffic Road API
 * [OpenAPI document](/swagger/openapi.json)   Digitraffic is a service operated by the [Fintraffic](https://www.fintraffic.fi) offering real time traffic information. Currently the service covers *road, marine and rail* traffic. More information can be found at the [Digitraffic website](https://www.digitraffic.fi/)   The service has a public Google-group [road.digitraffic.fi](https://groups.google.com/forum/#!forum/roaddigitrafficfi) for communication between developers, service administrators and Fintraffic. The discussion in the forum is mostly in Finnish, but you're welcome to communicate in English too.   ### General notes of the API * Many Digitraffic APIs use GeoJSON as data format. Definition of the GeoJSON format can be found at https://tools.ietf.org/html/rfc7946. * For dates and times [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format is used with \"Zulu\" zero offset from UTC unless otherwise specified (i.e., \"yyyy-mm-ddThh:mm:ss[.mmm]Z\"). E.g. 2019-11-01T06:30:00Z.
 *
 * The version of the OpenAPI document: 2.94.0#e017ffd@2022-10-18T07:48:28+0000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fi.tuni.monitor.roadapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Counting Site Metadata
 */
@ApiModel(description = "Counting Site Metadata")
@JsonPropertyOrder({
  CounterModel.JSON_PROPERTY_DOMAIN,
  CounterModel.JSON_PROPERTY_NAME,
  CounterModel.JSON_PROPERTY_INTERVAL,
  CounterModel.JSON_PROPERTY_LAST_DATA_TIMESTAMP,
  CounterModel.JSON_PROPERTY_REMOVED_TIMESTAMP,
  CounterModel.JSON_PROPERTY_ID,
  CounterModel.JSON_PROPERTY_USER_TYPE,
  CounterModel.JSON_PROPERTY_DIRECTION
})
public class CounterModel {
  public static final String JSON_PROPERTY_DOMAIN = "domain";
  private String domain;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_INTERVAL = "interval";
  private Integer interval;

  public static final String JSON_PROPERTY_LAST_DATA_TIMESTAMP = "lastDataTimestamp";
  private OffsetDateTime lastDataTimestamp;

  public static final String JSON_PROPERTY_REMOVED_TIMESTAMP = "removedTimestamp";
  private OffsetDateTime removedTimestamp;

  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_USER_TYPE = "userType";
  private Integer userType;

  public static final String JSON_PROPERTY_DIRECTION = "direction";
  private Integer direction;

  public CounterModel() {
  }

  public CounterModel domain(String domain) {
    
    this.domain = domain;
    return this;
  }

   /**
   * Domain name
   * @return domain
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Domain name")
  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDomain() {
    return domain;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomain(String domain) {
    this.domain = domain;
  }


  public CounterModel name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Counter name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Counter name")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public CounterModel interval(Integer interval) {
    
    this.interval = interval;
    return this;
  }

   /**
   * Data recording interval in minutes
   * @return interval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Data recording interval in minutes")
  @JsonProperty(JSON_PROPERTY_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getInterval() {
    return interval;
  }


  @JsonProperty(JSON_PROPERTY_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInterval(Integer interval) {
    this.interval = interval;
  }


  public CounterModel lastDataTimestamp(OffsetDateTime lastDataTimestamp) {
    
    this.lastDataTimestamp = lastDataTimestamp;
    return this;
  }

   /**
   * Timestamp of last data
   * @return lastDataTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Timestamp of last data")
  @JsonProperty(JSON_PROPERTY_LAST_DATA_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastDataTimestamp() {
    return lastDataTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_LAST_DATA_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastDataTimestamp(OffsetDateTime lastDataTimestamp) {
    this.lastDataTimestamp = lastDataTimestamp;
  }


  public CounterModel removedTimestamp(OffsetDateTime removedTimestamp) {
    
    this.removedTimestamp = removedTimestamp;
    return this;
  }

   /**
   * Removal timestamp
   * @return removedTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Removal timestamp")
  @JsonProperty(JSON_PROPERTY_REMOVED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getRemovedTimestamp() {
    return removedTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_REMOVED_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemovedTimestamp(OffsetDateTime removedTimestamp) {
    this.removedTimestamp = removedTimestamp;
  }


  public CounterModel id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * Counter id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Counter id")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public CounterModel userType(Integer userType) {
    
    this.userType = userType;
    return this;
  }

   /**
   * Counter type
   * @return userType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Counter type")
  @JsonProperty(JSON_PROPERTY_USER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUserType() {
    return userType;
  }


  @JsonProperty(JSON_PROPERTY_USER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserType(Integer userType) {
    this.userType = userType;
  }


  public CounterModel direction(Integer direction) {
    
    this.direction = direction;
    return this;
  }

   /**
   * Counter direction
   * @return direction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Counter direction")
  @JsonProperty(JSON_PROPERTY_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDirection() {
    return direction;
  }


  @JsonProperty(JSON_PROPERTY_DIRECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDirection(Integer direction) {
    this.direction = direction;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CounterModel counterModel = (CounterModel) o;
    return Objects.equals(this.domain, counterModel.domain) &&
        Objects.equals(this.name, counterModel.name) &&
        Objects.equals(this.interval, counterModel.interval) &&
        Objects.equals(this.lastDataTimestamp, counterModel.lastDataTimestamp) &&
        Objects.equals(this.removedTimestamp, counterModel.removedTimestamp) &&
        Objects.equals(this.id, counterModel.id) &&
        Objects.equals(this.userType, counterModel.userType) &&
        Objects.equals(this.direction, counterModel.direction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(domain, name, interval, lastDataTimestamp, removedTimestamp, id, userType, direction);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CounterModel {\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    interval: ").append(toIndentedString(interval)).append("\n");
    sb.append("    lastDataTimestamp: ").append(toIndentedString(lastDataTimestamp)).append("\n");
    sb.append("    removedTimestamp: ").append(toIndentedString(removedTimestamp)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userType: ").append(toIndentedString(userType)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

