/*
 * Digitraffic Road API
 * [OpenAPI document](/swagger/openapi.json)   Digitraffic is a service operated by the [Fintraffic](https://www.fintraffic.fi) offering real time traffic information. Currently the service covers *road, marine and rail* traffic. More information can be found at the [Digitraffic website](https://www.digitraffic.fi/)   The service has a public Google-group [road.digitraffic.fi](https://groups.google.com/forum/#!forum/roaddigitrafficfi) for communication between developers, service administrators and Fintraffic. The discussion in the forum is mostly in Finnish, but you're welcome to communicate in English too.   ### General notes of the API * Many Digitraffic APIs use GeoJSON as data format. Definition of the GeoJSON format can be found at https://tools.ietf.org/html/rfc7946. * For dates and times [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format is used with \"Zulu\" zero offset from UTC unless otherwise specified (i.e., \"yyyy-mm-ddThh:mm:ss[.mmm]Z\"). E.g. 2019-11-01T06:30:00Z.
 *
 * The version of the OpenAPI document: 2.94.0#e017ffd@2022-10-18T07:48:28+0000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fi.tuni.monitor.roadapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Location in road address (road number + number of the road section + distance from the beginning of the road section
 */
@ApiModel(description = "Location in road address (road number + number of the road section + distance from the beginning of the road section")
@JsonPropertyOrder({
  RoadAddressOldV2.JSON_PROPERTY_ROAD,
  RoadAddressOldV2.JSON_PROPERTY_ROAD_SECTION,
  RoadAddressOldV2.JSON_PROPERTY_DISTANCE
})
@JsonTypeName("RoadAddress_OldV2")
public class RoadAddressOldV2 {
  public static final String JSON_PROPERTY_ROAD = "road";
  private Integer road;

  public static final String JSON_PROPERTY_ROAD_SECTION = "roadSection";
  private Integer roadSection;

  public static final String JSON_PROPERTY_DISTANCE = "distance";
  private Integer distance;

  public RoadAddressOldV2() {
  }

  public RoadAddressOldV2 road(Integer road) {
    
    this.road = road;
    return this;
  }

   /**
   * Number of the road
   * @return road
  **/
 
  @ApiModelProperty(required = true, value = "Number of the road")
  @JsonProperty(JSON_PROPERTY_ROAD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getRoad() {
    return road;
  }


  @JsonProperty(JSON_PROPERTY_ROAD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRoad(Integer road) {
    this.road = road;
  }


  public RoadAddressOldV2 roadSection(Integer roadSection) {
    
    this.roadSection = roadSection;
    return this;
  }

   /**
   * Number of the road section
   * @return roadSection
  **/
 
  @ApiModelProperty(required = true, value = "Number of the road section")
  @JsonProperty(JSON_PROPERTY_ROAD_SECTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getRoadSection() {
    return roadSection;
  }


  @JsonProperty(JSON_PROPERTY_ROAD_SECTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRoadSection(Integer roadSection) {
    this.roadSection = roadSection;
  }


  public RoadAddressOldV2 distance(Integer distance) {
    
    this.distance = distance;
    return this;
  }

   /**
   * Distance from the beginning of the road section.
   * @return distance
  **/
 
  @ApiModelProperty(required = true, value = "Distance from the beginning of the road section.")
  @JsonProperty(JSON_PROPERTY_DISTANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getDistance() {
    return distance;
  }


  @JsonProperty(JSON_PROPERTY_DISTANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDistance(Integer distance) {
    this.distance = distance;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoadAddressOldV2 roadAddressOldV2 = (RoadAddressOldV2) o;
    return Objects.equals(this.road, roadAddressOldV2.road) &&
        Objects.equals(this.roadSection, roadAddressOldV2.roadSection) &&
        Objects.equals(this.distance, roadAddressOldV2.distance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(road, roadSection, distance);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoadAddressOldV2 {\n");
    sb.append("    road: ").append(toIndentedString(road)).append("\n");
    sb.append("    roadSection: ").append(toIndentedString(roadSection)).append("\n");
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

