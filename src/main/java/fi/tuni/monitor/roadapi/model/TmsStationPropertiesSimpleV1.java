/*
 * Digitraffic Road API
 * [OpenAPI document](/swagger/openapi.json)   Digitraffic is a service operated by the [Fintraffic](https://www.fintraffic.fi) offering real time traffic information. Currently the service covers *road, marine and rail* traffic. More information can be found at the [Digitraffic website](https://www.digitraffic.fi/)   The service has a public Google-group [road.digitraffic.fi](https://groups.google.com/forum/#!forum/roaddigitrafficfi) for communication between developers, service administrators and Fintraffic. The discussion in the forum is mostly in Finnish, but you're welcome to communicate in English too.   ### General notes of the API * Many Digitraffic APIs use GeoJSON as data format. Definition of the GeoJSON format can be found at https://tools.ietf.org/html/rfc7946. * For dates and times [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format is used with \"Zulu\" zero offset from UTC unless otherwise specified (i.e., \"yyyy-mm-ddThh:mm:ss[.mmm]Z\"). E.g. 2019-11-01T06:30:00Z.
 *
 * The version of the OpenAPI document: 2.94.0#e017ffd@2022-10-18T07:48:28+0000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fi.tuni.monitor.roadapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Tms station properties object with basic information
 */
@ApiModel(description = "Tms station properties object with basic information")
@JsonPropertyOrder({
  TmsStationPropertiesSimpleV1.JSON_PROPERTY_ID,
  TmsStationPropertiesSimpleV1.JSON_PROPERTY_TMS_NUMBER,
  TmsStationPropertiesSimpleV1.JSON_PROPERTY_NAME,
  TmsStationPropertiesSimpleV1.JSON_PROPERTY_COLLECTION_STATUS,
  TmsStationPropertiesSimpleV1.JSON_PROPERTY_STATE,
  TmsStationPropertiesSimpleV1.JSON_PROPERTY_DATA_UPDATED_TIME
})
public class TmsStationPropertiesSimpleV1 {
  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_TMS_NUMBER = "tmsNumber";
  private Long tmsNumber;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  /**
   * Data collection status
   */
  public enum CollectionStatusEnum {
    GATHERING("GATHERING"),
    
    REMOVED_TEMPORARILY("REMOVED_TEMPORARILY"),
    
    REMOVED_PERMANENTLY("REMOVED_PERMANENTLY");

    private String value;

    CollectionStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CollectionStatusEnum fromValue(String value) {
      for (CollectionStatusEnum b : CollectionStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_COLLECTION_STATUS = "collectionStatus";
  private CollectionStatusEnum collectionStatus;

  /**
   * Road station state
   */
  public enum StateEnum {
    OK("OK"),
    
    OK_FAULT_DOUBT_CANCELLED("OK_FAULT_DOUBT_CANCELLED"),
    
    FAULT_DOUBT("FAULT_DOUBT"),
    
    FAULT_CONFIRMED("FAULT_CONFIRMED"),
    
    FAULT_CONFIRMED_NOT_FIXED_IN_NEAR_FUTURE("FAULT_CONFIRMED_NOT_FIXED_IN_NEAR_FUTURE"),
    
    REPAIR_REQUEST_POSTED("REPAIR_REQUEST_POSTED"),
    
    REPAIR_MAINTENANCE_DONE("REPAIR_MAINTENANCE_DONE"),
    
    REPAIR_INTERRUPTED("REPAIR_INTERRUPTED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATE = "state";
  private StateEnum state;

  public static final String JSON_PROPERTY_DATA_UPDATED_TIME = "dataUpdatedTime";
  private OffsetDateTime dataUpdatedTime;

  public TmsStationPropertiesSimpleV1() {
  }

  public TmsStationPropertiesSimpleV1 id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Id of the object
   * @return id
  **/
 
  @ApiModelProperty(required = true, value = "Id of the object")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public TmsStationPropertiesSimpleV1 tmsNumber(Long tmsNumber) {
    
    this.tmsNumber = tmsNumber;
    return this;
  }

   /**
   * Get tmsNumber
   * @return tmsNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TMS_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getTmsNumber() {
    return tmsNumber;
  }


  @JsonProperty(JSON_PROPERTY_TMS_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTmsNumber(Long tmsNumber) {
    this.tmsNumber = tmsNumber;
  }


  public TmsStationPropertiesSimpleV1 name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Common name of road station
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Common name of road station")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public TmsStationPropertiesSimpleV1 collectionStatus(CollectionStatusEnum collectionStatus) {
    
    this.collectionStatus = collectionStatus;
    return this;
  }

   /**
   * Data collection status
   * @return collectionStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Data collection status")
  @JsonProperty(JSON_PROPERTY_COLLECTION_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CollectionStatusEnum getCollectionStatus() {
    return collectionStatus;
  }


  @JsonProperty(JSON_PROPERTY_COLLECTION_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCollectionStatus(CollectionStatusEnum collectionStatus) {
    this.collectionStatus = collectionStatus;
  }


  public TmsStationPropertiesSimpleV1 state(StateEnum state) {
    
    this.state = state;
    return this;
  }

   /**
   * Road station state
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Road station state")
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StateEnum getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(StateEnum state) {
    this.state = state;
  }


  public TmsStationPropertiesSimpleV1 dataUpdatedTime(OffsetDateTime dataUpdatedTime) {
    
    this.dataUpdatedTime = dataUpdatedTime;
    return this;
  }

   /**
   * Data last updated date time
   * @return dataUpdatedTime
  **/
 
  @ApiModelProperty(required = true, value = "Data last updated date time")
  @JsonProperty(JSON_PROPERTY_DATA_UPDATED_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getDataUpdatedTime() {
    return dataUpdatedTime;
  }


  @JsonProperty(JSON_PROPERTY_DATA_UPDATED_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDataUpdatedTime(OffsetDateTime dataUpdatedTime) {
    this.dataUpdatedTime = dataUpdatedTime;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TmsStationPropertiesSimpleV1 tmsStationPropertiesSimpleV1 = (TmsStationPropertiesSimpleV1) o;
    return Objects.equals(this.id, tmsStationPropertiesSimpleV1.id) &&
        Objects.equals(this.tmsNumber, tmsStationPropertiesSimpleV1.tmsNumber) &&
        Objects.equals(this.name, tmsStationPropertiesSimpleV1.name) &&
        Objects.equals(this.collectionStatus, tmsStationPropertiesSimpleV1.collectionStatus) &&
        Objects.equals(this.state, tmsStationPropertiesSimpleV1.state) &&
        Objects.equals(this.dataUpdatedTime, tmsStationPropertiesSimpleV1.dataUpdatedTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, tmsNumber, name, collectionStatus, state, dataUpdatedTime);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TmsStationPropertiesSimpleV1 {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    tmsNumber: ").append(toIndentedString(tmsNumber)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    collectionStatus: ").append(toIndentedString(collectionStatus)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    dataUpdatedTime: ").append(toIndentedString(dataUpdatedTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

