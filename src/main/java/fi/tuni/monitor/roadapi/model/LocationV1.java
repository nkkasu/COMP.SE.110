/*
 * Digitraffic Road API
 * [OpenAPI document](/swagger/openapi.json)   Digitraffic is a service operated by the [Fintraffic](https://www.fintraffic.fi) offering real time traffic information. Currently the service covers *road, marine and rail* traffic. More information can be found at the [Digitraffic website](https://www.digitraffic.fi/)   The service has a public Google-group [road.digitraffic.fi](https://groups.google.com/forum/#!forum/roaddigitrafficfi) for communication between developers, service administrators and Fintraffic. The discussion in the forum is mostly in Finnish, but you're welcome to communicate in English too.   ### General notes of the API * Many Digitraffic APIs use GeoJSON as data format. Definition of the GeoJSON format can be found at https://tools.ietf.org/html/rfc7946. * For dates and times [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format is used with \"Zulu\" zero offset from UTC unless otherwise specified (i.e., \"yyyy-mm-ddThh:mm:ss[.mmm]Z\"). E.g. 2019-11-01T06:30:00Z.
 *
 * The version of the OpenAPI document: 2.94.0#e017ffd@2022-10-18T07:48:28+0000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fi.tuni.monitor.roadapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AlertC location of a traffic situation announcement
 */
@ApiModel(description = "AlertC location of a traffic situation announcement")
@JsonPropertyOrder({
  LocationV1.JSON_PROPERTY_COUNTRY_CODE,
  LocationV1.JSON_PROPERTY_LOCATION_TABLE_NUMBER,
  LocationV1.JSON_PROPERTY_LOCATION_TABLE_VERSION,
  LocationV1.JSON_PROPERTY_DESCRIPTION
})
public class LocationV1 {
  public static final String JSON_PROPERTY_COUNTRY_CODE = "countryCode";
  private Integer countryCode;

  public static final String JSON_PROPERTY_LOCATION_TABLE_NUMBER = "locationTableNumber";
  private Integer locationTableNumber;

  public static final String JSON_PROPERTY_LOCATION_TABLE_VERSION = "locationTableVersion";
  private String locationTableVersion;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public LocationV1() {
  }

  public LocationV1 countryCode(Integer countryCode) {
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * AlertC country code defined by RDS (IEC 62106)
   * @return countryCode
  **/
 
  @ApiModelProperty(required = true, value = "AlertC country code defined by RDS (IEC 62106)")
  @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCountryCode() {
    return countryCode;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCountryCode(Integer countryCode) {
    this.countryCode = countryCode;
  }


  public LocationV1 locationTableNumber(Integer locationTableNumber) {
    
    this.locationTableNumber = locationTableNumber;
    return this;
  }

   /**
   * AlertC location table number. Country code + location table number fully identifies the table.
   * @return locationTableNumber
  **/
 
  @ApiModelProperty(required = true, value = "AlertC location table number. Country code + location table number fully identifies the table.")
  @JsonProperty(JSON_PROPERTY_LOCATION_TABLE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getLocationTableNumber() {
    return locationTableNumber;
  }


  @JsonProperty(JSON_PROPERTY_LOCATION_TABLE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocationTableNumber(Integer locationTableNumber) {
    this.locationTableNumber = locationTableNumber;
  }


  public LocationV1 locationTableVersion(String locationTableVersion) {
    
    this.locationTableVersion = locationTableVersion;
    return this;
  }

   /**
   * AlertC location table version number
   * @return locationTableVersion
  **/
 
  @ApiModelProperty(required = true, value = "AlertC location table version number")
  @JsonProperty(JSON_PROPERTY_LOCATION_TABLE_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getLocationTableVersion() {
    return locationTableVersion;
  }


  @JsonProperty(JSON_PROPERTY_LOCATION_TABLE_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLocationTableVersion(String locationTableVersion) {
    this.locationTableVersion = locationTableVersion;
  }


  public LocationV1 description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Textual representation of the location
   * @return description
  **/
 
  @ApiModelProperty(required = true, value = "Textual representation of the location")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LocationV1 locationV1 = (LocationV1) o;
    return Objects.equals(this.countryCode, locationV1.countryCode) &&
        Objects.equals(this.locationTableNumber, locationV1.locationTableNumber) &&
        Objects.equals(this.locationTableVersion, locationV1.locationTableVersion) &&
        Objects.equals(this.description, locationV1.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(countryCode, locationTableNumber, locationTableVersion, description);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LocationV1 {\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    locationTableNumber: ").append(toIndentedString(locationTableNumber)).append("\n");
    sb.append("    locationTableVersion: ").append(toIndentedString(locationTableVersion)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

