/*
 * Digitraffic Road API
 * [OpenAPI document](/swagger/openapi.json)   Digitraffic is a service operated by the [Fintraffic](https://www.fintraffic.fi) offering real time traffic information. Currently the service covers *road, marine and rail* traffic. More information can be found at the [Digitraffic website](https://www.digitraffic.fi/)   The service has a public Google-group [road.digitraffic.fi](https://groups.google.com/forum/#!forum/roaddigitrafficfi) for communication between developers, service administrators and Fintraffic. The discussion in the forum is mostly in Finnish, but you're welcome to communicate in English too.   ### General notes of the API * Many Digitraffic APIs use GeoJSON as data format. Definition of the GeoJSON format can be found at https://tools.ietf.org/html/rfc7946. * For dates and times [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format is used with \"Zulu\" zero offset from UTC unless otherwise specified (i.e., \"yyyy-mm-ddThh:mm:ss[.mmm]Z\"). E.g. 2019-11-01T06:30:00Z.
 *
 * The version of the OpenAPI document: 2.94.0#e017ffd@2022-10-18T07:48:28+0000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fi.tuni.monitor.roadapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fi.tuni.monitor.roadapi.model.AlertCLocationV1;
import fi.tuni.monitor.roadapi.model.TrafficMessageRoadAddressV1;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * A single road point
 */
@ApiModel(description = "A single road point")
@JsonPropertyOrder({
  RoadPointV1.JSON_PROPERTY_MUNICIPALITY,
  RoadPointV1.JSON_PROPERTY_PROVINCE,
  RoadPointV1.JSON_PROPERTY_COUNTRY,
  RoadPointV1.JSON_PROPERTY_ROAD_ADDRESS,
  RoadPointV1.JSON_PROPERTY_ROAD_NAME,
  RoadPointV1.JSON_PROPERTY_ALERT_C_LOCATION
})
public class RoadPointV1 {
  public static final String JSON_PROPERTY_MUNICIPALITY = "municipality";
  private String municipality;

  public static final String JSON_PROPERTY_PROVINCE = "province";
  private String province;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private String country;

  public static final String JSON_PROPERTY_ROAD_ADDRESS = "roadAddress";
  private TrafficMessageRoadAddressV1 roadAddress;

  public static final String JSON_PROPERTY_ROAD_NAME = "roadName";
  private String roadName;

  public static final String JSON_PROPERTY_ALERT_C_LOCATION = "alertCLocation";
  private AlertCLocationV1 alertCLocation;

  public RoadPointV1() {
  }

  public RoadPointV1 municipality(String municipality) {
    
    this.municipality = municipality;
    return this;
  }

   /**
   * City, town or village.
   * @return municipality
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "City, town or village.")
  @JsonProperty(JSON_PROPERTY_MUNICIPALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMunicipality() {
    return municipality;
  }


  @JsonProperty(JSON_PROPERTY_MUNICIPALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMunicipality(String municipality) {
    this.municipality = municipality;
  }


  public RoadPointV1 province(String province) {
    
    this.province = province;
    return this;
  }

   /**
   * Province eq. Satakunta.
   * @return province
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Province eq. Satakunta.")
  @JsonProperty(JSON_PROPERTY_PROVINCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProvince() {
    return province;
  }


  @JsonProperty(JSON_PROPERTY_PROVINCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProvince(String province) {
    this.province = province;
  }


  public RoadPointV1 country(String country) {
    
    this.country = country;
    return this;
  }

   /**
   * Usually Finland, but may be something else eq. Sweden, Norway, Russia.
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Usually Finland, but may be something else eq. Sweden, Norway, Russia.")
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(String country) {
    this.country = country;
  }


  public RoadPointV1 roadAddress(TrafficMessageRoadAddressV1 roadAddress) {
    
    this.roadAddress = roadAddress;
    return this;
  }

   /**
   * Get roadAddress
   * @return roadAddress
  **/
 
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ROAD_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TrafficMessageRoadAddressV1 getRoadAddress() {
    return roadAddress;
  }


  @JsonProperty(JSON_PROPERTY_ROAD_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRoadAddress(TrafficMessageRoadAddressV1 roadAddress) {
    this.roadAddress = roadAddress;
  }


  public RoadPointV1 roadName(String roadName) {
    
    this.roadName = roadName;
    return this;
  }

   /**
   * Name of the road where the accident happened.
   * @return roadName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the road where the accident happened.")
  @JsonProperty(JSON_PROPERTY_ROAD_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRoadName() {
    return roadName;
  }


  @JsonProperty(JSON_PROPERTY_ROAD_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRoadName(String roadName) {
    this.roadName = roadName;
  }


  public RoadPointV1 alertCLocation(AlertCLocationV1 alertCLocation) {
    
    this.alertCLocation = alertCLocation;
    return this;
  }

   /**
   * Get alertCLocation
   * @return alertCLocation
  **/
 
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ALERT_C_LOCATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AlertCLocationV1 getAlertCLocation() {
    return alertCLocation;
  }


  @JsonProperty(JSON_PROPERTY_ALERT_C_LOCATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAlertCLocation(AlertCLocationV1 alertCLocation) {
    this.alertCLocation = alertCLocation;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoadPointV1 roadPointV1 = (RoadPointV1) o;
    return Objects.equals(this.municipality, roadPointV1.municipality) &&
        Objects.equals(this.province, roadPointV1.province) &&
        Objects.equals(this.country, roadPointV1.country) &&
        Objects.equals(this.roadAddress, roadPointV1.roadAddress) &&
        Objects.equals(this.roadName, roadPointV1.roadName) &&
        Objects.equals(this.alertCLocation, roadPointV1.alertCLocation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(municipality, province, country, roadAddress, roadName, alertCLocation);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoadPointV1 {\n");
    sb.append("    municipality: ").append(toIndentedString(municipality)).append("\n");
    sb.append("    province: ").append(toIndentedString(province)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    roadAddress: ").append(toIndentedString(roadAddress)).append("\n");
    sb.append("    roadName: ").append(toIndentedString(roadName)).append("\n");
    sb.append("    alertCLocation: ").append(toIndentedString(alertCLocation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

