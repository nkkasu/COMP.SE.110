/*
 * Digitraffic Road API
 * [OpenAPI document](/swagger/openapi.json)   Digitraffic is a service operated by the [Fintraffic](https://www.fintraffic.fi) offering real time traffic information. Currently the service covers *road, marine and rail* traffic. More information can be found at the [Digitraffic website](https://www.digitraffic.fi/)   The service has a public Google-group [road.digitraffic.fi](https://groups.google.com/forum/#!forum/roaddigitrafficfi) for communication between developers, service administrators and Fintraffic. The discussion in the forum is mostly in Finnish, but you're welcome to communicate in English too.   ### General notes of the API * Many Digitraffic APIs use GeoJSON as data format. Definition of the GeoJSON format can be found at https://tools.ietf.org/html/rfc7946. * For dates and times [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format is used with \"Zulu\" zero offset from UTC unless otherwise specified (i.e., \"yyyy-mm-ddThh:mm:ss[.mmm]Z\"). E.g. 2019-11-01T06:30:00Z.
 *
 * The version of the OpenAPI document: 2.94.0#e017ffd@2022-10-18T07:48:28+0000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fi.tuni.monitor.roadapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fi.tuni.monitor.roadapi.model.Exchange;
import fi.tuni.monitor.roadapi.model.ExtensionType;
import fi.tuni.monitor.roadapi.model.PayloadPublication;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * D2LogicalModel
 */
@JsonPropertyOrder({
  D2LogicalModel.JSON_PROPERTY_EXCHANGE,
  D2LogicalModel.JSON_PROPERTY_PAYLOAD_PUBLICATION,
  D2LogicalModel.JSON_PROPERTY_D2_LOGICAL_MODEL_EXTENSION,
  D2LogicalModel.JSON_PROPERTY_MODEL_BASE_VERSION
})
public class D2LogicalModel {
  public static final String JSON_PROPERTY_EXCHANGE = "exchange";
  private Exchange exchange;

  public static final String JSON_PROPERTY_PAYLOAD_PUBLICATION = "payloadPublication";
  private PayloadPublication payloadPublication;

  public static final String JSON_PROPERTY_D2_LOGICAL_MODEL_EXTENSION = "d2LogicalModelExtension";
  private ExtensionType d2LogicalModelExtension;

  public static final String JSON_PROPERTY_MODEL_BASE_VERSION = "modelBaseVersion";
  private String modelBaseVersion;

  public D2LogicalModel() {
  }

  public D2LogicalModel exchange(Exchange exchange) {
    
    this.exchange = exchange;
    return this;
  }

   /**
   * Get exchange
   * @return exchange
  **/
 
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_EXCHANGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Exchange getExchange() {
    return exchange;
  }


  @JsonProperty(JSON_PROPERTY_EXCHANGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExchange(Exchange exchange) {
    this.exchange = exchange;
  }


  public D2LogicalModel payloadPublication(PayloadPublication payloadPublication) {
    
    this.payloadPublication = payloadPublication;
    return this;
  }

   /**
   * Get payloadPublication
   * @return payloadPublication
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PAYLOAD_PUBLICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PayloadPublication getPayloadPublication() {
    return payloadPublication;
  }


  @JsonProperty(JSON_PROPERTY_PAYLOAD_PUBLICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPayloadPublication(PayloadPublication payloadPublication) {
    this.payloadPublication = payloadPublication;
  }


  public D2LogicalModel d2LogicalModelExtension(ExtensionType d2LogicalModelExtension) {
    
    this.d2LogicalModelExtension = d2LogicalModelExtension;
    return this;
  }

   /**
   * Get d2LogicalModelExtension
   * @return d2LogicalModelExtension
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_D2_LOGICAL_MODEL_EXTENSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExtensionType getD2LogicalModelExtension() {
    return d2LogicalModelExtension;
  }


  @JsonProperty(JSON_PROPERTY_D2_LOGICAL_MODEL_EXTENSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setD2LogicalModelExtension(ExtensionType d2LogicalModelExtension) {
    this.d2LogicalModelExtension = d2LogicalModelExtension;
  }


  public D2LogicalModel modelBaseVersion(String modelBaseVersion) {
    
    this.modelBaseVersion = modelBaseVersion;
    return this;
  }

   /**
   * Get modelBaseVersion
   * @return modelBaseVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MODEL_BASE_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getModelBaseVersion() {
    return modelBaseVersion;
  }


  @JsonProperty(JSON_PROPERTY_MODEL_BASE_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModelBaseVersion(String modelBaseVersion) {
    this.modelBaseVersion = modelBaseVersion;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    D2LogicalModel d2LogicalModel = (D2LogicalModel) o;
    return Objects.equals(this.exchange, d2LogicalModel.exchange) &&
        Objects.equals(this.payloadPublication, d2LogicalModel.payloadPublication) &&
        Objects.equals(this.d2LogicalModelExtension, d2LogicalModel.d2LogicalModelExtension) &&
        Objects.equals(this.modelBaseVersion, d2LogicalModel.modelBaseVersion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(exchange, payloadPublication, d2LogicalModelExtension, modelBaseVersion);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class D2LogicalModel {\n");
    sb.append("    exchange: ").append(toIndentedString(exchange)).append("\n");
    sb.append("    payloadPublication: ").append(toIndentedString(payloadPublication)).append("\n");
    sb.append("    d2LogicalModelExtension: ").append(toIndentedString(d2LogicalModelExtension)).append("\n");
    sb.append("    modelBaseVersion: ").append(toIndentedString(modelBaseVersion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

