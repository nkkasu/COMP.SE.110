/*
 * Digitraffic Road API
 * [OpenAPI document](/swagger/openapi.json)   Digitraffic is a service operated by the [Fintraffic](https://www.fintraffic.fi) offering real time traffic information. Currently the service covers *road, marine and rail* traffic. More information can be found at the [Digitraffic website](https://www.digitraffic.fi/)   The service has a public Google-group [road.digitraffic.fi](https://groups.google.com/forum/#!forum/roaddigitrafficfi) for communication between developers, service administrators and Fintraffic. The discussion in the forum is mostly in Finnish, but you're welcome to communicate in English too.   ### General notes of the API * Many Digitraffic APIs use GeoJSON as data format. Definition of the GeoJSON format can be found at https://tools.ietf.org/html/rfc7946. * For dates and times [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format is used with \"Zulu\" zero offset from UTC unless otherwise specified (i.e., \"yyyy-mm-ddThh:mm:ss[.mmm]Z\"). E.g. 2019-11-01T06:30:00Z.
 *
 * The version of the OpenAPI document: 2.94.0#e017ffd@2022-10-18T07:48:28+0000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fi.tuni.monitor.roadapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Description of code
 */
@ApiModel(description = "Description of code")
@JsonPropertyOrder({
  V3CodeDescription.JSON_PROPERTY_DESCRIPTION_EN,
  V3CodeDescription.JSON_PROPERTY_DESCRIPTION_FI,
  V3CodeDescription.JSON_PROPERTY_CODE
})
public class V3CodeDescription {
  public static final String JSON_PROPERTY_DESCRIPTION_EN = "descriptionEn";
  private String descriptionEn;

  public static final String JSON_PROPERTY_DESCRIPTION_FI = "descriptionFi";
  private String descriptionFi;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public V3CodeDescription() {
  }

  public V3CodeDescription descriptionEn(String descriptionEn) {
    
    this.descriptionEn = descriptionEn;
    return this;
  }

   /**
   * Description of the code(English
   * @return descriptionEn
  **/
 
  @ApiModelProperty(required = true, value = "Description of the code(English")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_EN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescriptionEn() {
    return descriptionEn;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION_EN)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescriptionEn(String descriptionEn) {
    this.descriptionEn = descriptionEn;
  }


  public V3CodeDescription descriptionFi(String descriptionFi) {
    
    this.descriptionFi = descriptionFi;
    return this;
  }

   /**
   * Description of the code(Finnish)
   * @return descriptionFi
  **/
 
  @ApiModelProperty(required = true, value = "Description of the code(Finnish)")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION_FI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescriptionFi() {
    return descriptionFi;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION_FI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescriptionFi(String descriptionFi) {
    this.descriptionFi = descriptionFi;
  }


  public V3CodeDescription code(String code) {
    
    this.code = code;
    return this;
  }

   /**
   * Code
   * @return code
  **/
 
  @ApiModelProperty(required = true, value = "Code")
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCode(String code) {
    this.code = code;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V3CodeDescription v3CodeDescription = (V3CodeDescription) o;
    return Objects.equals(this.descriptionEn, v3CodeDescription.descriptionEn) &&
        Objects.equals(this.descriptionFi, v3CodeDescription.descriptionFi) &&
        Objects.equals(this.code, v3CodeDescription.code);
  }

  @Override
  public int hashCode() {
    return Objects.hash(descriptionEn, descriptionFi, code);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V3CodeDescription {\n");
    sb.append("    descriptionEn: ").append(toIndentedString(descriptionEn)).append("\n");
    sb.append("    descriptionFi: ").append(toIndentedString(descriptionFi)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

