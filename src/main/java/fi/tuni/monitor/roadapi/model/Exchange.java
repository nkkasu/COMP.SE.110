/*
 * Digitraffic Road API
 * [OpenAPI document](/swagger/openapi.json)   Digitraffic is a service operated by the [Fintraffic](https://www.fintraffic.fi) offering real time traffic information. Currently the service covers *road, marine and rail* traffic. More information can be found at the [Digitraffic website](https://www.digitraffic.fi/)   The service has a public Google-group [road.digitraffic.fi](https://groups.google.com/forum/#!forum/roaddigitrafficfi) for communication between developers, service administrators and Fintraffic. The discussion in the forum is mostly in Finnish, but you're welcome to communicate in English too.   ### General notes of the API * Many Digitraffic APIs use GeoJSON as data format. Definition of the GeoJSON format can be found at https://tools.ietf.org/html/rfc7946. * For dates and times [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format is used with \"Zulu\" zero offset from UTC unless otherwise specified (i.e., \"yyyy-mm-ddThh:mm:ss[.mmm]Z\"). E.g. 2019-11-01T06:30:00Z.
 *
 * The version of the OpenAPI document: 2.94.0#e017ffd@2022-10-18T07:48:28+0000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fi.tuni.monitor.roadapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fi.tuni.monitor.roadapi.model.CatalogueReference;
import fi.tuni.monitor.roadapi.model.ExtensionType;
import fi.tuni.monitor.roadapi.model.FilterReference;
import fi.tuni.monitor.roadapi.model.InternationalIdentifier;
import fi.tuni.monitor.roadapi.model.Subscription;
import fi.tuni.monitor.roadapi.model.Target;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Exchange
 */
@JsonPropertyOrder({
  Exchange.JSON_PROPERTY_CHANGED_FLAG,
  Exchange.JSON_PROPERTY_CLIENT_IDENTIFICATION,
  Exchange.JSON_PROPERTY_DELIVERY_BREAK,
  Exchange.JSON_PROPERTY_DENY_REASON,
  Exchange.JSON_PROPERTY_HISTORICAL_START_DATE,
  Exchange.JSON_PROPERTY_HISTORICAL_STOP_DATE,
  Exchange.JSON_PROPERTY_KEEP_ALIVE,
  Exchange.JSON_PROPERTY_REQUEST_TYPE,
  Exchange.JSON_PROPERTY_RESPONSE,
  Exchange.JSON_PROPERTY_SUBSCRIPTION_REFERENCE,
  Exchange.JSON_PROPERTY_SUPPLIER_IDENTIFICATION,
  Exchange.JSON_PROPERTY_TARGET,
  Exchange.JSON_PROPERTY_SUBSCRIPTION,
  Exchange.JSON_PROPERTY_FILTER_REFERENCES,
  Exchange.JSON_PROPERTY_CATALOGUE_REFERENCES,
  Exchange.JSON_PROPERTY_EXCHANGE_EXTENSION
})
public class Exchange {
  /**
   * Gets or Sets changedFlag
   */
  public enum ChangedFlagEnum {
    CATALOGUE("CATALOGUE"),
    
    FILTER("FILTER");

    private String value;

    ChangedFlagEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ChangedFlagEnum fromValue(String value) {
      for (ChangedFlagEnum b : ChangedFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CHANGED_FLAG = "changedFlag";
  private ChangedFlagEnum changedFlag;

  public static final String JSON_PROPERTY_CLIENT_IDENTIFICATION = "clientIdentification";
  private String clientIdentification;

  public static final String JSON_PROPERTY_DELIVERY_BREAK = "deliveryBreak";
  private Boolean deliveryBreak;

  /**
   * Gets or Sets denyReason
   */
  public enum DenyReasonEnum {
    UNKNOWN_REASON("UNKNOWN_REASON"),
    
    WRONG_CATALOGUE("WRONG_CATALOGUE"),
    
    WRONG_FILTER("WRONG_FILTER"),
    
    WRONG_ORDER("WRONG_ORDER"),
    
    WRONG_PARTNER("WRONG_PARTNER");

    private String value;

    DenyReasonEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DenyReasonEnum fromValue(String value) {
      for (DenyReasonEnum b : DenyReasonEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DENY_REASON = "denyReason";
  private DenyReasonEnum denyReason;

  public static final String JSON_PROPERTY_HISTORICAL_START_DATE = "historicalStartDate";
  private OffsetDateTime historicalStartDate;

  public static final String JSON_PROPERTY_HISTORICAL_STOP_DATE = "historicalStopDate";
  private OffsetDateTime historicalStopDate;

  public static final String JSON_PROPERTY_KEEP_ALIVE = "keepAlive";
  private Boolean keepAlive;

  /**
   * Gets or Sets requestType
   */
  public enum RequestTypeEnum {
    CATALOGUE("CATALOGUE"),
    
    FILTER("FILTER"),
    
    REQUEST_DATA("REQUEST_DATA"),
    
    REQUEST_HISTORICAL_DATA("REQUEST_HISTORICAL_DATA"),
    
    SUBSCRIPTION("SUBSCRIPTION");

    private String value;

    RequestTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RequestTypeEnum fromValue(String value) {
      for (RequestTypeEnum b : RequestTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_REQUEST_TYPE = "requestType";
  private RequestTypeEnum requestType;

  /**
   * Gets or Sets response
   */
  public enum ResponseEnum {
    ACKNOWLEDGE("ACKNOWLEDGE"),
    
    CATALOGUE_REQUEST_DENIED("CATALOGUE_REQUEST_DENIED"),
    
    FILTER_REQUEST_DENIED("FILTER_REQUEST_DENIED"),
    
    REQUEST_DENIED("REQUEST_DENIED"),
    
    SUBSCRIPTION_REQUEST_DENIED("SUBSCRIPTION_REQUEST_DENIED");

    private String value;

    ResponseEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ResponseEnum fromValue(String value) {
      for (ResponseEnum b : ResponseEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RESPONSE = "response";
  private ResponseEnum response;

  public static final String JSON_PROPERTY_SUBSCRIPTION_REFERENCE = "subscriptionReference";
  private String subscriptionReference;

  public static final String JSON_PROPERTY_SUPPLIER_IDENTIFICATION = "supplierIdentification";
  private InternationalIdentifier supplierIdentification;

  public static final String JSON_PROPERTY_TARGET = "target";
  private Target target;

  public static final String JSON_PROPERTY_SUBSCRIPTION = "subscription";
  private Subscription subscription;

  public static final String JSON_PROPERTY_FILTER_REFERENCES = "filterReferences";
  private List<FilterReference> filterReferences = null;

  public static final String JSON_PROPERTY_CATALOGUE_REFERENCES = "catalogueReferences";
  private List<CatalogueReference> catalogueReferences = null;

  public static final String JSON_PROPERTY_EXCHANGE_EXTENSION = "exchangeExtension";
  private ExtensionType exchangeExtension;

  public Exchange() {
  }

  public Exchange changedFlag(ChangedFlagEnum changedFlag) {
    
    this.changedFlag = changedFlag;
    return this;
  }

   /**
   * Get changedFlag
   * @return changedFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CHANGED_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ChangedFlagEnum getChangedFlag() {
    return changedFlag;
  }


  @JsonProperty(JSON_PROPERTY_CHANGED_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChangedFlag(ChangedFlagEnum changedFlag) {
    this.changedFlag = changedFlag;
  }


  public Exchange clientIdentification(String clientIdentification) {
    
    this.clientIdentification = clientIdentification;
    return this;
  }

   /**
   * Get clientIdentification
   * @return clientIdentification
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CLIENT_IDENTIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClientIdentification() {
    return clientIdentification;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_IDENTIFICATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientIdentification(String clientIdentification) {
    this.clientIdentification = clientIdentification;
  }


  public Exchange deliveryBreak(Boolean deliveryBreak) {
    
    this.deliveryBreak = deliveryBreak;
    return this;
  }

   /**
   * Get deliveryBreak
   * @return deliveryBreak
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DELIVERY_BREAK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDeliveryBreak() {
    return deliveryBreak;
  }


  @JsonProperty(JSON_PROPERTY_DELIVERY_BREAK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeliveryBreak(Boolean deliveryBreak) {
    this.deliveryBreak = deliveryBreak;
  }


  public Exchange denyReason(DenyReasonEnum denyReason) {
    
    this.denyReason = denyReason;
    return this;
  }

   /**
   * Get denyReason
   * @return denyReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DENY_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DenyReasonEnum getDenyReason() {
    return denyReason;
  }


  @JsonProperty(JSON_PROPERTY_DENY_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDenyReason(DenyReasonEnum denyReason) {
    this.denyReason = denyReason;
  }


  public Exchange historicalStartDate(OffsetDateTime historicalStartDate) {
    
    this.historicalStartDate = historicalStartDate;
    return this;
  }

   /**
   * Get historicalStartDate
   * @return historicalStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_HISTORICAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getHistoricalStartDate() {
    return historicalStartDate;
  }


  @JsonProperty(JSON_PROPERTY_HISTORICAL_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHistoricalStartDate(OffsetDateTime historicalStartDate) {
    this.historicalStartDate = historicalStartDate;
  }


  public Exchange historicalStopDate(OffsetDateTime historicalStopDate) {
    
    this.historicalStopDate = historicalStopDate;
    return this;
  }

   /**
   * Get historicalStopDate
   * @return historicalStopDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_HISTORICAL_STOP_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getHistoricalStopDate() {
    return historicalStopDate;
  }


  @JsonProperty(JSON_PROPERTY_HISTORICAL_STOP_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHistoricalStopDate(OffsetDateTime historicalStopDate) {
    this.historicalStopDate = historicalStopDate;
  }


  public Exchange keepAlive(Boolean keepAlive) {
    
    this.keepAlive = keepAlive;
    return this;
  }

   /**
   * Get keepAlive
   * @return keepAlive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_KEEP_ALIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getKeepAlive() {
    return keepAlive;
  }


  @JsonProperty(JSON_PROPERTY_KEEP_ALIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKeepAlive(Boolean keepAlive) {
    this.keepAlive = keepAlive;
  }


  public Exchange requestType(RequestTypeEnum requestType) {
    
    this.requestType = requestType;
    return this;
  }

   /**
   * Get requestType
   * @return requestType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REQUEST_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RequestTypeEnum getRequestType() {
    return requestType;
  }


  @JsonProperty(JSON_PROPERTY_REQUEST_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestType(RequestTypeEnum requestType) {
    this.requestType = requestType;
  }


  public Exchange response(ResponseEnum response) {
    
    this.response = response;
    return this;
  }

   /**
   * Get response
   * @return response
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ResponseEnum getResponse() {
    return response;
  }


  @JsonProperty(JSON_PROPERTY_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResponse(ResponseEnum response) {
    this.response = response;
  }


  public Exchange subscriptionReference(String subscriptionReference) {
    
    this.subscriptionReference = subscriptionReference;
    return this;
  }

   /**
   * Get subscriptionReference
   * @return subscriptionReference
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubscriptionReference() {
    return subscriptionReference;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriptionReference(String subscriptionReference) {
    this.subscriptionReference = subscriptionReference;
  }


  public Exchange supplierIdentification(InternationalIdentifier supplierIdentification) {
    
    this.supplierIdentification = supplierIdentification;
    return this;
  }

   /**
   * Get supplierIdentification
   * @return supplierIdentification
  **/
 
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SUPPLIER_IDENTIFICATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public InternationalIdentifier getSupplierIdentification() {
    return supplierIdentification;
  }


  @JsonProperty(JSON_PROPERTY_SUPPLIER_IDENTIFICATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSupplierIdentification(InternationalIdentifier supplierIdentification) {
    this.supplierIdentification = supplierIdentification;
  }


  public Exchange target(Target target) {
    
    this.target = target;
    return this;
  }

   /**
   * Get target
   * @return target
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TARGET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Target getTarget() {
    return target;
  }


  @JsonProperty(JSON_PROPERTY_TARGET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTarget(Target target) {
    this.target = target;
  }


  public Exchange subscription(Subscription subscription) {
    
    this.subscription = subscription;
    return this;
  }

   /**
   * Get subscription
   * @return subscription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Subscription getSubscription() {
    return subscription;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscription(Subscription subscription) {
    this.subscription = subscription;
  }


  public Exchange filterReferences(List<FilterReference> filterReferences) {
    
    this.filterReferences = filterReferences;
    return this;
  }

  public Exchange addFilterReferencesItem(FilterReference filterReferencesItem) {
    if (this.filterReferences == null) {
      this.filterReferences = new ArrayList<>();
    }
    this.filterReferences.add(filterReferencesItem);
    return this;
  }

   /**
   * Get filterReferences
   * @return filterReferences
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FILTER_REFERENCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<FilterReference> getFilterReferences() {
    return filterReferences;
  }


  @JsonProperty(JSON_PROPERTY_FILTER_REFERENCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFilterReferences(List<FilterReference> filterReferences) {
    this.filterReferences = filterReferences;
  }


  public Exchange catalogueReferences(List<CatalogueReference> catalogueReferences) {
    
    this.catalogueReferences = catalogueReferences;
    return this;
  }

  public Exchange addCatalogueReferencesItem(CatalogueReference catalogueReferencesItem) {
    if (this.catalogueReferences == null) {
      this.catalogueReferences = new ArrayList<>();
    }
    this.catalogueReferences.add(catalogueReferencesItem);
    return this;
  }

   /**
   * Get catalogueReferences
   * @return catalogueReferences
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CATALOGUE_REFERENCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CatalogueReference> getCatalogueReferences() {
    return catalogueReferences;
  }


  @JsonProperty(JSON_PROPERTY_CATALOGUE_REFERENCES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCatalogueReferences(List<CatalogueReference> catalogueReferences) {
    this.catalogueReferences = catalogueReferences;
  }


  public Exchange exchangeExtension(ExtensionType exchangeExtension) {
    
    this.exchangeExtension = exchangeExtension;
    return this;
  }

   /**
   * Get exchangeExtension
   * @return exchangeExtension
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXCHANGE_EXTENSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExtensionType getExchangeExtension() {
    return exchangeExtension;
  }


  @JsonProperty(JSON_PROPERTY_EXCHANGE_EXTENSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExchangeExtension(ExtensionType exchangeExtension) {
    this.exchangeExtension = exchangeExtension;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Exchange exchange = (Exchange) o;
    return Objects.equals(this.changedFlag, exchange.changedFlag) &&
        Objects.equals(this.clientIdentification, exchange.clientIdentification) &&
        Objects.equals(this.deliveryBreak, exchange.deliveryBreak) &&
        Objects.equals(this.denyReason, exchange.denyReason) &&
        Objects.equals(this.historicalStartDate, exchange.historicalStartDate) &&
        Objects.equals(this.historicalStopDate, exchange.historicalStopDate) &&
        Objects.equals(this.keepAlive, exchange.keepAlive) &&
        Objects.equals(this.requestType, exchange.requestType) &&
        Objects.equals(this.response, exchange.response) &&
        Objects.equals(this.subscriptionReference, exchange.subscriptionReference) &&
        Objects.equals(this.supplierIdentification, exchange.supplierIdentification) &&
        Objects.equals(this.target, exchange.target) &&
        Objects.equals(this.subscription, exchange.subscription) &&
        Objects.equals(this.filterReferences, exchange.filterReferences) &&
        Objects.equals(this.catalogueReferences, exchange.catalogueReferences) &&
        Objects.equals(this.exchangeExtension, exchange.exchangeExtension);
  }

  @Override
  public int hashCode() {
    return Objects.hash(changedFlag, clientIdentification, deliveryBreak, denyReason, historicalStartDate, historicalStopDate, keepAlive, requestType, response, subscriptionReference, supplierIdentification, target, subscription, filterReferences, catalogueReferences, exchangeExtension);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Exchange {\n");
    sb.append("    changedFlag: ").append(toIndentedString(changedFlag)).append("\n");
    sb.append("    clientIdentification: ").append(toIndentedString(clientIdentification)).append("\n");
    sb.append("    deliveryBreak: ").append(toIndentedString(deliveryBreak)).append("\n");
    sb.append("    denyReason: ").append(toIndentedString(denyReason)).append("\n");
    sb.append("    historicalStartDate: ").append(toIndentedString(historicalStartDate)).append("\n");
    sb.append("    historicalStopDate: ").append(toIndentedString(historicalStopDate)).append("\n");
    sb.append("    keepAlive: ").append(toIndentedString(keepAlive)).append("\n");
    sb.append("    requestType: ").append(toIndentedString(requestType)).append("\n");
    sb.append("    response: ").append(toIndentedString(response)).append("\n");
    sb.append("    subscriptionReference: ").append(toIndentedString(subscriptionReference)).append("\n");
    sb.append("    supplierIdentification: ").append(toIndentedString(supplierIdentification)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    subscription: ").append(toIndentedString(subscription)).append("\n");
    sb.append("    filterReferences: ").append(toIndentedString(filterReferences)).append("\n");
    sb.append("    catalogueReferences: ").append(toIndentedString(catalogueReferences)).append("\n");
    sb.append("    exchangeExtension: ").append(toIndentedString(exchangeExtension)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

