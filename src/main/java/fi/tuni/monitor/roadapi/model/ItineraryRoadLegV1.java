/*
 * Digitraffic Road API
 * [OpenAPI document](/swagger/openapi.json)   Digitraffic is a service operated by the [Fintraffic](https://www.fintraffic.fi) offering real time traffic information. Currently the service covers *road, marine and rail* traffic. More information can be found at the [Digitraffic website](https://www.digitraffic.fi/)   The service has a public Google-group [road.digitraffic.fi](https://groups.google.com/forum/#!forum/roaddigitrafficfi) for communication between developers, service administrators and Fintraffic. The discussion in the forum is mostly in Finnish, but you're welcome to communicate in English too.   ### General notes of the API * Many Digitraffic APIs use GeoJSON as data format. Definition of the GeoJSON format can be found at https://tools.ietf.org/html/rfc7946. * For dates and times [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format is used with \"Zulu\" zero offset from UTC unless otherwise specified (i.e., \"yyyy-mm-ddThh:mm:ss[.mmm]Z\"). E.g. 2019-11-01T06:30:00Z.
 *
 * The version of the OpenAPI document: 2.94.0#e017ffd@2022-10-18T07:48:28+0000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fi.tuni.monitor.roadapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ItineraryRoadLeg is route leg that is on the road network.
 */
@ApiModel(description = "ItineraryRoadLeg is route leg that is on the road network.")
@JsonPropertyOrder({
  ItineraryRoadLegV1.JSON_PROPERTY_ROAD_NUMBER,
  ItineraryRoadLegV1.JSON_PROPERTY_ROAD_NAME,
  ItineraryRoadLegV1.JSON_PROPERTY_START_AREA,
  ItineraryRoadLegV1.JSON_PROPERTY_END_AREA
})
public class ItineraryRoadLegV1 {
  public static final String JSON_PROPERTY_ROAD_NUMBER = "roadNumber";
  private Integer roadNumber;

  public static final String JSON_PROPERTY_ROAD_NAME = "roadName";
  private String roadName;

  public static final String JSON_PROPERTY_START_AREA = "startArea";
  private String startArea;

  public static final String JSON_PROPERTY_END_AREA = "endArea";
  private String endArea;

  public ItineraryRoadLegV1() {
  }

  public ItineraryRoadLegV1 roadNumber(Integer roadNumber) {
    
    this.roadNumber = roadNumber;
    return this;
  }

   /**
   * Number of the road.
   * @return roadNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of the road.")
  @JsonProperty(JSON_PROPERTY_ROAD_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRoadNumber() {
    return roadNumber;
  }


  @JsonProperty(JSON_PROPERTY_ROAD_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRoadNumber(Integer roadNumber) {
    this.roadNumber = roadNumber;
  }


  public ItineraryRoadLegV1 roadName(String roadName) {
    
    this.roadName = roadName;
    return this;
  }

   /**
   * Name of the road.
   * @return roadName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the road.")
  @JsonProperty(JSON_PROPERTY_ROAD_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRoadName() {
    return roadName;
  }


  @JsonProperty(JSON_PROPERTY_ROAD_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRoadName(String roadName) {
    this.roadName = roadName;
  }


  public ItineraryRoadLegV1 startArea(String startArea) {
    
    this.startArea = startArea;
    return this;
  }

   /**
   * Description of the place on the road, where this leg starts.
   * @return startArea
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description of the place on the road, where this leg starts.")
  @JsonProperty(JSON_PROPERTY_START_AREA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStartArea() {
    return startArea;
  }


  @JsonProperty(JSON_PROPERTY_START_AREA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartArea(String startArea) {
    this.startArea = startArea;
  }


  public ItineraryRoadLegV1 endArea(String endArea) {
    
    this.endArea = endArea;
    return this;
  }

   /**
   * Description of the place on the road, where this leg ends.
   * @return endArea
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description of the place on the road, where this leg ends.")
  @JsonProperty(JSON_PROPERTY_END_AREA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEndArea() {
    return endArea;
  }


  @JsonProperty(JSON_PROPERTY_END_AREA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndArea(String endArea) {
    this.endArea = endArea;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItineraryRoadLegV1 itineraryRoadLegV1 = (ItineraryRoadLegV1) o;
    return Objects.equals(this.roadNumber, itineraryRoadLegV1.roadNumber) &&
        Objects.equals(this.roadName, itineraryRoadLegV1.roadName) &&
        Objects.equals(this.startArea, itineraryRoadLegV1.startArea) &&
        Objects.equals(this.endArea, itineraryRoadLegV1.endArea);
  }

  @Override
  public int hashCode() {
    return Objects.hash(roadNumber, roadName, startArea, endArea);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItineraryRoadLegV1 {\n");
    sb.append("    roadNumber: ").append(toIndentedString(roadNumber)).append("\n");
    sb.append("    roadName: ").append(toIndentedString(roadName)).append("\n");
    sb.append("    startArea: ").append(toIndentedString(startArea)).append("\n");
    sb.append("    endArea: ").append(toIndentedString(endArea)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

