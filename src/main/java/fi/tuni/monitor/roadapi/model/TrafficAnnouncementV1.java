/*
 * Digitraffic Road API
 * [OpenAPI document](/swagger/openapi.json)   Digitraffic is a service operated by the [Fintraffic](https://www.fintraffic.fi) offering real time traffic information. Currently the service covers *road, marine and rail* traffic. More information can be found at the [Digitraffic website](https://www.digitraffic.fi/)   The service has a public Google-group [road.digitraffic.fi](https://groups.google.com/forum/#!forum/roaddigitrafficfi) for communication between developers, service administrators and Fintraffic. The discussion in the forum is mostly in Finnish, but you're welcome to communicate in English too.   ### General notes of the API * Many Digitraffic APIs use GeoJSON as data format. Definition of the GeoJSON format can be found at https://tools.ietf.org/html/rfc7946. * For dates and times [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format is used with \"Zulu\" zero offset from UTC unless otherwise specified (i.e., \"yyyy-mm-ddThh:mm:ss[.mmm]Z\"). E.g. 2019-11-01T06:30:00Z.
 *
 * The version of the OpenAPI document: 2.94.0#e017ffd@2022-10-18T07:48:28+0000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fi.tuni.monitor.roadapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fi.tuni.monitor.roadapi.model.FeatureV1;
import fi.tuni.monitor.roadapi.model.LastActiveItinerarySegmentV1;
import fi.tuni.monitor.roadapi.model.LocationDetailsV1;
import fi.tuni.monitor.roadapi.model.LocationV1;
import fi.tuni.monitor.roadapi.model.RoadWorkPhaseV1;
import fi.tuni.monitor.roadapi.model.TimeAndDurationV1;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Announcement time and duration
 */
@ApiModel(description = "Announcement time and duration")
@JsonPropertyOrder({
  TrafficAnnouncementV1.JSON_PROPERTY_LANGUAGE,
  TrafficAnnouncementV1.JSON_PROPERTY_TITLE,
  TrafficAnnouncementV1.JSON_PROPERTY_LOCATION,
  TrafficAnnouncementV1.JSON_PROPERTY_LOCATION_DETAILS,
  TrafficAnnouncementV1.JSON_PROPERTY_FEATURES,
  TrafficAnnouncementV1.JSON_PROPERTY_ROAD_WORK_PHASES,
  TrafficAnnouncementV1.JSON_PROPERTY_EARLY_CLOSING,
  TrafficAnnouncementV1.JSON_PROPERTY_COMMENT,
  TrafficAnnouncementV1.JSON_PROPERTY_TIME_AND_DURATION,
  TrafficAnnouncementV1.JSON_PROPERTY_ADDITIONAL_INFORMATION,
  TrafficAnnouncementV1.JSON_PROPERTY_SENDER,
  TrafficAnnouncementV1.JSON_PROPERTY_LAST_ACTIVE_ITINERARY_SEGMENT
})
public class TrafficAnnouncementV1 {
  /**
   * Language of the announcement, always fi. A subset of ISO 639-1 in upper case.
   */
  public enum LanguageEnum {
    FI("FI");

    private String value;

    LanguageEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static LanguageEnum fromValue(String value) {
      for (LanguageEnum b : LanguageEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_LANGUAGE = "language";
  private LanguageEnum language;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_LOCATION = "location";
  private LocationV1 location;

  public static final String JSON_PROPERTY_LOCATION_DETAILS = "locationDetails";
  private LocationDetailsV1 locationDetails;

  public static final String JSON_PROPERTY_FEATURES = "features";
  private List<FeatureV1> features = null;

  public static final String JSON_PROPERTY_ROAD_WORK_PHASES = "roadWorkPhases";
  private List<RoadWorkPhaseV1> roadWorkPhases = null;

  /**
   * Road work was closed before the planned time. &#39;CLOSED&#39; means the road work closed after its start time, possibly skipping some phases. &#39;CANCELED&#39; means the road work was canceled before its start time. Note: This field is null if the road work closes normally.
   */
  public enum EarlyClosingEnum {
    CLOSED("CLOSED"),
    
    CANCELED("CANCELED");

    private String value;

    EarlyClosingEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EarlyClosingEnum fromValue(String value) {
      for (EarlyClosingEnum b : EarlyClosingEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_EARLY_CLOSING = "earlyClosing";
  private EarlyClosingEnum earlyClosing;

  public static final String JSON_PROPERTY_COMMENT = "comment";
  private String comment;

  public static final String JSON_PROPERTY_TIME_AND_DURATION = "timeAndDuration";
  private TimeAndDurationV1 timeAndDuration;

  public static final String JSON_PROPERTY_ADDITIONAL_INFORMATION = "additionalInformation";
  private String additionalInformation;

  public static final String JSON_PROPERTY_SENDER = "sender";
  private String sender;

  public static final String JSON_PROPERTY_LAST_ACTIVE_ITINERARY_SEGMENT = "lastActiveItinerarySegment";
  private LastActiveItinerarySegmentV1 lastActiveItinerarySegment;

  public TrafficAnnouncementV1() {
  }

  public TrafficAnnouncementV1 language(LanguageEnum language) {
    
    this.language = language;
    return this;
  }

   /**
   * Language of the announcement, always fi. A subset of ISO 639-1 in upper case.
   * @return language
  **/
 
  @ApiModelProperty(required = true, value = "Language of the announcement, always fi. A subset of ISO 639-1 in upper case.")
  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LanguageEnum getLanguage() {
    return language;
  }


  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLanguage(LanguageEnum language) {
    this.language = language;
  }


  public TrafficAnnouncementV1 title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Short description about the situation
   * @return title
  **/
 
  @ApiModelProperty(required = true, value = "Short description about the situation")
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTitle() {
    return title;
  }


  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTitle(String title) {
    this.title = title;
  }


  public TrafficAnnouncementV1 location(LocationV1 location) {
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocationV1 getLocation() {
    return location;
  }


  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocation(LocationV1 location) {
    this.location = location;
  }


  public TrafficAnnouncementV1 locationDetails(LocationDetailsV1 locationDetails) {
    
    this.locationDetails = locationDetails;
    return this;
  }

   /**
   * Get locationDetails
   * @return locationDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOCATION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocationDetailsV1 getLocationDetails() {
    return locationDetails;
  }


  @JsonProperty(JSON_PROPERTY_LOCATION_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocationDetails(LocationDetailsV1 locationDetails) {
    this.locationDetails = locationDetails;
  }


  public TrafficAnnouncementV1 features(List<FeatureV1> features) {
    
    this.features = features;
    return this;
  }

  public TrafficAnnouncementV1 addFeaturesItem(FeatureV1 featuresItem) {
    if (this.features == null) {
      this.features = new ArrayList<>();
    }
    this.features.add(featuresItem);
    return this;
  }

   /**
   * Features of the announcement
   * @return features
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Features of the announcement")
  @JsonProperty(JSON_PROPERTY_FEATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<FeatureV1> getFeatures() {
    return features;
  }


  @JsonProperty(JSON_PROPERTY_FEATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFeatures(List<FeatureV1> features) {
    this.features = features;
  }


  public TrafficAnnouncementV1 roadWorkPhases(List<RoadWorkPhaseV1> roadWorkPhases) {
    
    this.roadWorkPhases = roadWorkPhases;
    return this;
  }

  public TrafficAnnouncementV1 addRoadWorkPhasesItem(RoadWorkPhaseV1 roadWorkPhasesItem) {
    if (this.roadWorkPhases == null) {
      this.roadWorkPhases = new ArrayList<>();
    }
    this.roadWorkPhases.add(roadWorkPhasesItem);
    return this;
  }

   /**
   * Contains the phases of this road maintenance work
   * @return roadWorkPhases
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Contains the phases of this road maintenance work")
  @JsonProperty(JSON_PROPERTY_ROAD_WORK_PHASES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<RoadWorkPhaseV1> getRoadWorkPhases() {
    return roadWorkPhases;
  }


  @JsonProperty(JSON_PROPERTY_ROAD_WORK_PHASES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRoadWorkPhases(List<RoadWorkPhaseV1> roadWorkPhases) {
    this.roadWorkPhases = roadWorkPhases;
  }


  public TrafficAnnouncementV1 earlyClosing(EarlyClosingEnum earlyClosing) {
    
    this.earlyClosing = earlyClosing;
    return this;
  }

   /**
   * Road work was closed before the planned time. &#39;CLOSED&#39; means the road work closed after its start time, possibly skipping some phases. &#39;CANCELED&#39; means the road work was canceled before its start time. Note: This field is null if the road work closes normally.
   * @return earlyClosing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Road work was closed before the planned time. 'CLOSED' means the road work closed after its start time, possibly skipping some phases. 'CANCELED' means the road work was canceled before its start time. Note: This field is null if the road work closes normally.")
  @JsonProperty(JSON_PROPERTY_EARLY_CLOSING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EarlyClosingEnum getEarlyClosing() {
    return earlyClosing;
  }


  @JsonProperty(JSON_PROPERTY_EARLY_CLOSING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEarlyClosing(EarlyClosingEnum earlyClosing) {
    this.earlyClosing = earlyClosing;
  }


  public TrafficAnnouncementV1 comment(String comment) {
    
    this.comment = comment;
    return this;
  }

   /**
   * Free comment
   * @return comment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Free comment")
  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getComment() {
    return comment;
  }


  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComment(String comment) {
    this.comment = comment;
  }


  public TrafficAnnouncementV1 timeAndDuration(TimeAndDurationV1 timeAndDuration) {
    
    this.timeAndDuration = timeAndDuration;
    return this;
  }

   /**
   * Get timeAndDuration
   * @return timeAndDuration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TIME_AND_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TimeAndDurationV1 getTimeAndDuration() {
    return timeAndDuration;
  }


  @JsonProperty(JSON_PROPERTY_TIME_AND_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeAndDuration(TimeAndDurationV1 timeAndDuration) {
    this.timeAndDuration = timeAndDuration;
  }


  public TrafficAnnouncementV1 additionalInformation(String additionalInformation) {
    
    this.additionalInformation = additionalInformation;
    return this;
  }

   /**
   * Additional information.
   * @return additionalInformation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional information.")
  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdditionalInformation() {
    return additionalInformation;
  }


  @JsonProperty(JSON_PROPERTY_ADDITIONAL_INFORMATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdditionalInformation(String additionalInformation) {
    this.additionalInformation = additionalInformation;
  }


  public TrafficAnnouncementV1 sender(String sender) {
    
    this.sender = sender;
    return this;
  }

   /**
   * Name of the sender
   * @return sender
  **/
 
  @ApiModelProperty(required = true, value = "Name of the sender")
  @JsonProperty(JSON_PROPERTY_SENDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSender() {
    return sender;
  }


  @JsonProperty(JSON_PROPERTY_SENDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSender(String sender) {
    this.sender = sender;
  }


  public TrafficAnnouncementV1 lastActiveItinerarySegment(LastActiveItinerarySegmentV1 lastActiveItinerarySegment) {
    
    this.lastActiveItinerarySegment = lastActiveItinerarySegment;
    return this;
  }

   /**
   * Get lastActiveItinerarySegment
   * @return lastActiveItinerarySegment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LAST_ACTIVE_ITINERARY_SEGMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LastActiveItinerarySegmentV1 getLastActiveItinerarySegment() {
    return lastActiveItinerarySegment;
  }


  @JsonProperty(JSON_PROPERTY_LAST_ACTIVE_ITINERARY_SEGMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastActiveItinerarySegment(LastActiveItinerarySegmentV1 lastActiveItinerarySegment) {
    this.lastActiveItinerarySegment = lastActiveItinerarySegment;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TrafficAnnouncementV1 trafficAnnouncementV1 = (TrafficAnnouncementV1) o;
    return Objects.equals(this.language, trafficAnnouncementV1.language) &&
        Objects.equals(this.title, trafficAnnouncementV1.title) &&
        Objects.equals(this.location, trafficAnnouncementV1.location) &&
        Objects.equals(this.locationDetails, trafficAnnouncementV1.locationDetails) &&
        Objects.equals(this.features, trafficAnnouncementV1.features) &&
        Objects.equals(this.roadWorkPhases, trafficAnnouncementV1.roadWorkPhases) &&
        Objects.equals(this.earlyClosing, trafficAnnouncementV1.earlyClosing) &&
        Objects.equals(this.comment, trafficAnnouncementV1.comment) &&
        Objects.equals(this.timeAndDuration, trafficAnnouncementV1.timeAndDuration) &&
        Objects.equals(this.additionalInformation, trafficAnnouncementV1.additionalInformation) &&
        Objects.equals(this.sender, trafficAnnouncementV1.sender) &&
        Objects.equals(this.lastActiveItinerarySegment, trafficAnnouncementV1.lastActiveItinerarySegment);
  }

  @Override
  public int hashCode() {
    return Objects.hash(language, title, location, locationDetails, features, roadWorkPhases, earlyClosing, comment, timeAndDuration, additionalInformation, sender, lastActiveItinerarySegment);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TrafficAnnouncementV1 {\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    locationDetails: ").append(toIndentedString(locationDetails)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    roadWorkPhases: ").append(toIndentedString(roadWorkPhases)).append("\n");
    sb.append("    earlyClosing: ").append(toIndentedString(earlyClosing)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    timeAndDuration: ").append(toIndentedString(timeAndDuration)).append("\n");
    sb.append("    additionalInformation: ").append(toIndentedString(additionalInformation)).append("\n");
    sb.append("    sender: ").append(toIndentedString(sender)).append("\n");
    sb.append("    lastActiveItinerarySegment: ").append(toIndentedString(lastActiveItinerarySegment)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

