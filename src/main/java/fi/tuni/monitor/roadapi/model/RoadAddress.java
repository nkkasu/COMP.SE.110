/*
 * Digitraffic Road API
 * [OpenAPI document](/swagger/openapi.json)   Digitraffic is a service operated by the [Fintraffic](https://www.fintraffic.fi) offering real time traffic information. Currently the service covers *road, marine and rail* traffic. More information can be found at the [Digitraffic website](https://www.digitraffic.fi/)   The service has a public Google-group [road.digitraffic.fi](https://groups.google.com/forum/#!forum/roaddigitrafficfi) for communication between developers, service administrators and Fintraffic. The discussion in the forum is mostly in Finnish, but you're welcome to communicate in English too.   ### General notes of the API * Many Digitraffic APIs use GeoJSON as data format. Definition of the GeoJSON format can be found at https://tools.ietf.org/html/rfc7946. * For dates and times [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format is used with \"Zulu\" zero offset from UTC unless otherwise specified (i.e., \"yyyy-mm-ddThh:mm:ss[.mmm]Z\"). E.g. 2019-11-01T06:30:00Z.
 *
 * The version of the OpenAPI document: 2.94.0#e017ffd@2022-10-18T07:48:28+0000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fi.tuni.monitor.roadapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Road station road address
 */
@ApiModel(description = "Road station road address")
@JsonPropertyOrder({
  RoadAddress.JSON_PROPERTY_ROAD_NUMBER,
  RoadAddress.JSON_PROPERTY_ROAD_SECTION,
  RoadAddress.JSON_PROPERTY_DISTANCE_FROM_ROAD_SECTION_START,
  RoadAddress.JSON_PROPERTY_CARRIAGEWAY_CODE,
  RoadAddress.JSON_PROPERTY_ROAD_MAINTENANCE_CLASS,
  RoadAddress.JSON_PROPERTY_CONTRACT_AREA,
  RoadAddress.JSON_PROPERTY_CONTRACT_AREA_CODE,
  RoadAddress.JSON_PROPERTY_CARRIAGEWAY
})
public class RoadAddress {
  public static final String JSON_PROPERTY_ROAD_NUMBER = "roadNumber";
  private Integer roadNumber;

  public static final String JSON_PROPERTY_ROAD_SECTION = "roadSection";
  private Integer roadSection;

  public static final String JSON_PROPERTY_DISTANCE_FROM_ROAD_SECTION_START = "distanceFromRoadSectionStart";
  private Integer distanceFromRoadSectionStart;

  public static final String JSON_PROPERTY_CARRIAGEWAY_CODE = "carriagewayCode";
  private Integer carriagewayCode;

  public static final String JSON_PROPERTY_ROAD_MAINTENANCE_CLASS = "roadMaintenanceClass";
  private String roadMaintenanceClass;

  public static final String JSON_PROPERTY_CONTRACT_AREA = "contractArea";
  private String contractArea;

  public static final String JSON_PROPERTY_CONTRACT_AREA_CODE = "contractAreaCode";
  private Integer contractAreaCode;

  /**
   * Gets or Sets carriageway
   */
  public enum CarriagewayEnum {
    ONE_CARRIAGEWAY("ONE_CARRIAGEWAY"),
    
    DUAL_CARRIAGEWAY_FIRST_MEASURING_DIRECTION("DUAL_CARRIAGEWAY_FIRST_MEASURING_DIRECTION"),
    
    DUAL_CARRIAGEWAY_SECOND_UPSTREAM("DUAL_CARRIAGEWAY_SECOND_UPSTREAM");

    private String value;

    CarriagewayEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CarriagewayEnum fromValue(String value) {
      for (CarriagewayEnum b : CarriagewayEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CARRIAGEWAY = "carriageway";
  private CarriagewayEnum carriageway;

  public RoadAddress() {
  }

  public RoadAddress roadNumber(Integer roadNumber) {
    
    this.roadNumber = roadNumber;
    return this;
  }

   /**
   * Road number (values 1–99999)
   * @return roadNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "7", value = "Road number (values 1–99999)")
  @JsonProperty(JSON_PROPERTY_ROAD_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRoadNumber() {
    return roadNumber;
  }


  @JsonProperty(JSON_PROPERTY_ROAD_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRoadNumber(Integer roadNumber) {
    this.roadNumber = roadNumber;
  }


  public RoadAddress roadSection(Integer roadSection) {
    
    this.roadSection = roadSection;
    return this;
  }

   /**
   * Road section (values 1–999)
   * @return roadSection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "8", value = "Road section (values 1–999)")
  @JsonProperty(JSON_PROPERTY_ROAD_SECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRoadSection() {
    return roadSection;
  }


  @JsonProperty(JSON_PROPERTY_ROAD_SECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRoadSection(Integer roadSection) {
    this.roadSection = roadSection;
  }


  public RoadAddress distanceFromRoadSectionStart(Integer distanceFromRoadSectionStart) {
    
    this.distanceFromRoadSectionStart = distanceFromRoadSectionStart;
    return this;
  }

   /**
   * Distance from start of the road portion [m]
   * @return distanceFromRoadSectionStart
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3801", value = "Distance from start of the road portion [m]")
  @JsonProperty(JSON_PROPERTY_DISTANCE_FROM_ROAD_SECTION_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDistanceFromRoadSectionStart() {
    return distanceFromRoadSectionStart;
  }


  @JsonProperty(JSON_PROPERTY_DISTANCE_FROM_ROAD_SECTION_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDistanceFromRoadSectionStart(Integer distanceFromRoadSectionStart) {
    this.distanceFromRoadSectionStart = distanceFromRoadSectionStart;
  }


  public RoadAddress carriagewayCode(Integer carriagewayCode) {
    
    this.carriagewayCode = carriagewayCode;
    return this;
  }

   /**
   * Carriageway (0 &#x3D; One carriageway portion, 1 &#x3D; First carriageway of dual carriageway portion (measuring direction) 2 &#x3D; Second carriageway of dual carriageway portion (upstream))
   * @return carriagewayCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Carriageway (0 = One carriageway portion, 1 = First carriageway of dual carriageway portion (measuring direction) 2 = Second carriageway of dual carriageway portion (upstream))")
  @JsonProperty(JSON_PROPERTY_CARRIAGEWAY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCarriagewayCode() {
    return carriagewayCode;
  }


  @JsonProperty(JSON_PROPERTY_CARRIAGEWAY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCarriagewayCode(Integer carriagewayCode) {
    this.carriagewayCode = carriagewayCode;
  }


  public RoadAddress roadMaintenanceClass(String roadMaintenanceClass) {
    
    this.roadMaintenanceClass = roadMaintenanceClass;
    return this;
  }

   /**
   * Road winter maintenance class
   * @return roadMaintenanceClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "Road winter maintenance class")
  @JsonProperty(JSON_PROPERTY_ROAD_MAINTENANCE_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRoadMaintenanceClass() {
    return roadMaintenanceClass;
  }


  @JsonProperty(JSON_PROPERTY_ROAD_MAINTENANCE_CLASS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRoadMaintenanceClass(String roadMaintenanceClass) {
    this.roadMaintenanceClass = roadMaintenanceClass;
  }


  public RoadAddress contractArea(String contractArea) {
    
    this.contractArea = contractArea;
    return this;
  }

   /**
   * Road contract area
   * @return contractArea
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Espoo 19-24", value = "Road contract area")
  @JsonProperty(JSON_PROPERTY_CONTRACT_AREA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContractArea() {
    return contractArea;
  }


  @JsonProperty(JSON_PROPERTY_CONTRACT_AREA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContractArea(String contractArea) {
    this.contractArea = contractArea;
  }


  public RoadAddress contractAreaCode(Integer contractAreaCode) {
    
    this.contractAreaCode = contractAreaCode;
    return this;
  }

   /**
   * Road contract area code
   * @return contractAreaCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "142", value = "Road contract area code")
  @JsonProperty(JSON_PROPERTY_CONTRACT_AREA_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getContractAreaCode() {
    return contractAreaCode;
  }


  @JsonProperty(JSON_PROPERTY_CONTRACT_AREA_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContractAreaCode(Integer contractAreaCode) {
    this.contractAreaCode = contractAreaCode;
  }


  public RoadAddress carriageway(CarriagewayEnum carriageway) {
    
    this.carriageway = carriageway;
    return this;
  }

   /**
   * Get carriageway
   * @return carriageway
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CARRIAGEWAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CarriagewayEnum getCarriageway() {
    return carriageway;
  }


  @JsonProperty(JSON_PROPERTY_CARRIAGEWAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCarriageway(CarriagewayEnum carriageway) {
    this.carriageway = carriageway;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoadAddress roadAddress = (RoadAddress) o;
    return Objects.equals(this.roadNumber, roadAddress.roadNumber) &&
        Objects.equals(this.roadSection, roadAddress.roadSection) &&
        Objects.equals(this.distanceFromRoadSectionStart, roadAddress.distanceFromRoadSectionStart) &&
        Objects.equals(this.carriagewayCode, roadAddress.carriagewayCode) &&
        Objects.equals(this.roadMaintenanceClass, roadAddress.roadMaintenanceClass) &&
        Objects.equals(this.contractArea, roadAddress.contractArea) &&
        Objects.equals(this.contractAreaCode, roadAddress.contractAreaCode) &&
        Objects.equals(this.carriageway, roadAddress.carriageway);
  }

  @Override
  public int hashCode() {
    return Objects.hash(roadNumber, roadSection, distanceFromRoadSectionStart, carriagewayCode, roadMaintenanceClass, contractArea, contractAreaCode, carriageway);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoadAddress {\n");
    sb.append("    roadNumber: ").append(toIndentedString(roadNumber)).append("\n");
    sb.append("    roadSection: ").append(toIndentedString(roadSection)).append("\n");
    sb.append("    distanceFromRoadSectionStart: ").append(toIndentedString(distanceFromRoadSectionStart)).append("\n");
    sb.append("    carriagewayCode: ").append(toIndentedString(carriagewayCode)).append("\n");
    sb.append("    roadMaintenanceClass: ").append(toIndentedString(roadMaintenanceClass)).append("\n");
    sb.append("    contractArea: ").append(toIndentedString(contractArea)).append("\n");
    sb.append("    contractAreaCode: ").append(toIndentedString(contractAreaCode)).append("\n");
    sb.append("    carriageway: ").append(toIndentedString(carriageway)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

