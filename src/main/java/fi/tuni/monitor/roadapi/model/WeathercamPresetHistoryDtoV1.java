/*
 * Digitraffic Road API
 * [OpenAPI document](/swagger/openapi.json)   Digitraffic is a service operated by the [Fintraffic](https://www.fintraffic.fi) offering real time traffic information. Currently the service covers *road, marine and rail* traffic. More information can be found at the [Digitraffic website](https://www.digitraffic.fi/)   The service has a public Google-group [road.digitraffic.fi](https://groups.google.com/forum/#!forum/roaddigitrafficfi) for communication between developers, service administrators and Fintraffic. The discussion in the forum is mostly in Finnish, but you're welcome to communicate in English too.   ### General notes of the API * Many Digitraffic APIs use GeoJSON as data format. Definition of the GeoJSON format can be found at https://tools.ietf.org/html/rfc7946. * For dates and times [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format is used with \"Zulu\" zero offset from UTC unless otherwise specified (i.e., \"yyyy-mm-ddThh:mm:ss[.mmm]Z\"). E.g. 2019-11-01T06:30:00Z.
 *
 * The version of the OpenAPI document: 2.94.0#e017ffd@2022-10-18T07:48:28+0000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fi.tuni.monitor.roadapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fi.tuni.monitor.roadapi.model.WeathercamPresetHistoryItemDtoV1;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Weather camera preset&#39;s image history.
 */
@ApiModel(description = "Weather camera preset's image history.")
@JsonPropertyOrder({
  WeathercamPresetHistoryDtoV1.JSON_PROPERTY_ID,
  WeathercamPresetHistoryDtoV1.JSON_PROPERTY_DATA_UPDATED_TIME,
  WeathercamPresetHistoryDtoV1.JSON_PROPERTY_HISTORY
})
public class WeathercamPresetHistoryDtoV1 {
  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_DATA_UPDATED_TIME = "dataUpdatedTime";
  private OffsetDateTime dataUpdatedTime;

  public static final String JSON_PROPERTY_HISTORY = "history";
  private List<WeathercamPresetHistoryItemDtoV1> history = new ArrayList<>();

  public WeathercamPresetHistoryDtoV1() {
  }

  public WeathercamPresetHistoryDtoV1 id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Weathercam preset&#39;s id
   * @return id
  **/
 
  @ApiModelProperty(required = true, value = "Weathercam preset's id")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public WeathercamPresetHistoryDtoV1 dataUpdatedTime(OffsetDateTime dataUpdatedTime) {
    
    this.dataUpdatedTime = dataUpdatedTime;
    return this;
  }

   /**
   * Time when data was last updated
   * @return dataUpdatedTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Time when data was last updated")
  @JsonProperty(JSON_PROPERTY_DATA_UPDATED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDataUpdatedTime() {
    return dataUpdatedTime;
  }


  @JsonProperty(JSON_PROPERTY_DATA_UPDATED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDataUpdatedTime(OffsetDateTime dataUpdatedTime) {
    this.dataUpdatedTime = dataUpdatedTime;
  }


  public WeathercamPresetHistoryDtoV1 history(List<WeathercamPresetHistoryItemDtoV1> history) {
    
    this.history = history;
    return this;
  }

  public WeathercamPresetHistoryDtoV1 addHistoryItem(WeathercamPresetHistoryItemDtoV1 historyItem) {
    this.history.add(historyItem);
    return this;
  }

   /**
   * Weathercam preset&#39;s history
   * @return history
  **/
 
  @ApiModelProperty(required = true, value = "Weathercam preset's history")
  @JsonProperty(JSON_PROPERTY_HISTORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<WeathercamPresetHistoryItemDtoV1> getHistory() {
    return history;
  }


  @JsonProperty(JSON_PROPERTY_HISTORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHistory(List<WeathercamPresetHistoryItemDtoV1> history) {
    this.history = history;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WeathercamPresetHistoryDtoV1 weathercamPresetHistoryDtoV1 = (WeathercamPresetHistoryDtoV1) o;
    return Objects.equals(this.id, weathercamPresetHistoryDtoV1.id) &&
        Objects.equals(this.dataUpdatedTime, weathercamPresetHistoryDtoV1.dataUpdatedTime) &&
        Objects.equals(this.history, weathercamPresetHistoryDtoV1.history);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, dataUpdatedTime, history);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WeathercamPresetHistoryDtoV1 {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    dataUpdatedTime: ").append(toIndentedString(dataUpdatedTime)).append("\n");
    sb.append("    history: ").append(toIndentedString(history)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

