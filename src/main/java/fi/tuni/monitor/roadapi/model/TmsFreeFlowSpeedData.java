/*
 * Digitraffic Road API
 * [OpenAPI document](/swagger/openapi.json)   Digitraffic is a service operated by the [Fintraffic](https://www.fintraffic.fi) offering real time traffic information. Currently the service covers *road, marine and rail* traffic. More information can be found at the [Digitraffic website](https://www.digitraffic.fi/)   The service has a public Google-group [road.digitraffic.fi](https://groups.google.com/forum/#!forum/roaddigitrafficfi) for communication between developers, service administrators and Fintraffic. The discussion in the forum is mostly in Finnish, but you're welcome to communicate in English too.   ### General notes of the API * Many Digitraffic APIs use GeoJSON as data format. Definition of the GeoJSON format can be found at https://tools.ietf.org/html/rfc7946. * For dates and times [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format is used with \"Zulu\" zero offset from UTC unless otherwise specified (i.e., \"yyyy-mm-ddThh:mm:ss[.mmm]Z\"). E.g. 2019-11-01T06:30:00Z.
 *
 * The version of the OpenAPI document: 2.94.0#e017ffd@2022-10-18T07:48:28+0000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fi.tuni.monitor.roadapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Free flow speeds for TMS stations
 */
@ApiModel(description = "Free flow speeds for TMS stations")
@JsonPropertyOrder({
  TmsFreeFlowSpeedData.JSON_PROPERTY_FREE_FLOW_SPEED1,
  TmsFreeFlowSpeedData.JSON_PROPERTY_FREE_FLOW_SPEED2,
  TmsFreeFlowSpeedData.JSON_PROPERTY_ID,
  TmsFreeFlowSpeedData.JSON_PROPERTY_TMS_NUMBER
})
public class TmsFreeFlowSpeedData {
  public static final String JSON_PROPERTY_FREE_FLOW_SPEED1 = "freeFlowSpeed1";
  private Double freeFlowSpeed1;

  public static final String JSON_PROPERTY_FREE_FLOW_SPEED2 = "freeFlowSpeed2";
  private Double freeFlowSpeed2;

  public static final String JSON_PROPERTY_ID = "id";
  private Long id;

  public static final String JSON_PROPERTY_TMS_NUMBER = "tmsNumber";
  private Long tmsNumber;

  public TmsFreeFlowSpeedData() {
  }

  public TmsFreeFlowSpeedData freeFlowSpeed1(Double freeFlowSpeed1) {
    
    this.freeFlowSpeed1 = freeFlowSpeed1;
    return this;
  }

   /**
   * Free flow speed to direction 1 [km/h]
   * @return freeFlowSpeed1
  **/
 
  @ApiModelProperty(required = true, value = "Free flow speed to direction 1 [km/h]")
  @JsonProperty(JSON_PROPERTY_FREE_FLOW_SPEED1)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getFreeFlowSpeed1() {
    return freeFlowSpeed1;
  }


  @JsonProperty(JSON_PROPERTY_FREE_FLOW_SPEED1)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFreeFlowSpeed1(Double freeFlowSpeed1) {
    this.freeFlowSpeed1 = freeFlowSpeed1;
  }


  public TmsFreeFlowSpeedData freeFlowSpeed2(Double freeFlowSpeed2) {
    
    this.freeFlowSpeed2 = freeFlowSpeed2;
    return this;
  }

   /**
   * Free flow speed to direction 2 [km/h]
   * @return freeFlowSpeed2
  **/
 
  @ApiModelProperty(required = true, value = "Free flow speed to direction 2 [km/h]")
  @JsonProperty(JSON_PROPERTY_FREE_FLOW_SPEED2)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Double getFreeFlowSpeed2() {
    return freeFlowSpeed2;
  }


  @JsonProperty(JSON_PROPERTY_FREE_FLOW_SPEED2)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFreeFlowSpeed2(Double freeFlowSpeed2) {
    this.freeFlowSpeed2 = freeFlowSpeed2;
  }


  public TmsFreeFlowSpeedData id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * TMS station identifier (naturalId)
   * @return id
  **/
 
  @ApiModelProperty(required = true, value = "TMS station identifier (naturalId)")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(Long id) {
    this.id = id;
  }


  public TmsFreeFlowSpeedData tmsNumber(Long tmsNumber) {
    
    this.tmsNumber = tmsNumber;
    return this;
  }

   /**
   * TMS station number
   * @return tmsNumber
  **/
 
  @ApiModelProperty(required = true, value = "TMS station number")
  @JsonProperty(JSON_PROPERTY_TMS_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getTmsNumber() {
    return tmsNumber;
  }


  @JsonProperty(JSON_PROPERTY_TMS_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTmsNumber(Long tmsNumber) {
    this.tmsNumber = tmsNumber;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TmsFreeFlowSpeedData tmsFreeFlowSpeedData = (TmsFreeFlowSpeedData) o;
    return Objects.equals(this.freeFlowSpeed1, tmsFreeFlowSpeedData.freeFlowSpeed1) &&
        Objects.equals(this.freeFlowSpeed2, tmsFreeFlowSpeedData.freeFlowSpeed2) &&
        Objects.equals(this.id, tmsFreeFlowSpeedData.id) &&
        Objects.equals(this.tmsNumber, tmsFreeFlowSpeedData.tmsNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(freeFlowSpeed1, freeFlowSpeed2, id, tmsNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TmsFreeFlowSpeedData {\n");
    sb.append("    freeFlowSpeed1: ").append(toIndentedString(freeFlowSpeed1)).append("\n");
    sb.append("    freeFlowSpeed2: ").append(toIndentedString(freeFlowSpeed2)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    tmsNumber: ").append(toIndentedString(tmsNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

