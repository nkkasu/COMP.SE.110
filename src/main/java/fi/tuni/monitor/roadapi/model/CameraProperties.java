/*
 * Digitraffic Road API
 * [OpenAPI document](/swagger/openapi.json)   Digitraffic is a service operated by the [Fintraffic](https://www.fintraffic.fi) offering real time traffic information. Currently the service covers *road, marine and rail* traffic. More information can be found at the [Digitraffic website](https://www.digitraffic.fi/)   The service has a public Google-group [road.digitraffic.fi](https://groups.google.com/forum/#!forum/roaddigitrafficfi) for communication between developers, service administrators and Fintraffic. The discussion in the forum is mostly in Finnish, but you're welcome to communicate in English too.   ### General notes of the API * Many Digitraffic APIs use GeoJSON as data format. Definition of the GeoJSON format can be found at https://tools.ietf.org/html/rfc7946. * For dates and times [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format is used with \"Zulu\" zero offset from UTC unless otherwise specified (i.e., \"yyyy-mm-ddThh:mm:ss[.mmm]Z\"). E.g. 2019-11-01T06:30:00Z.
 *
 * The version of the OpenAPI document: 2.94.0#e017ffd@2022-10-18T07:48:28+0000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fi.tuni.monitor.roadapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fi.tuni.monitor.roadapi.model.CameraPreset;
import fi.tuni.monitor.roadapi.model.RoadAddress;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Camera preset properties
 */
@ApiModel(description = "Camera preset properties")
@JsonPropertyOrder({
  CameraProperties.JSON_PROPERTY_ROAD_STATION_ID,
  CameraProperties.JSON_PROPERTY_ID,
  CameraProperties.JSON_PROPERTY_NAME,
  CameraProperties.JSON_PROPERTY_CAMERA_TYPE,
  CameraProperties.JSON_PROPERTY_COLLECTION_INTERVAL,
  CameraProperties.JSON_PROPERTY_COLLECTION_STATUS,
  CameraProperties.JSON_PROPERTY_MUNICIPALITY,
  CameraProperties.JSON_PROPERTY_MUNICIPALITY_CODE,
  CameraProperties.JSON_PROPERTY_PROVINCE,
  CameraProperties.JSON_PROPERTY_PROVINCE_CODE,
  CameraProperties.JSON_PROPERTY_NAMES,
  CameraProperties.JSON_PROPERTY_ROAD_ADDRESS,
  CameraProperties.JSON_PROPERTY_LIVI_ID,
  CameraProperties.JSON_PROPERTY_COUNTRY,
  CameraProperties.JSON_PROPERTY_START_TIME,
  CameraProperties.JSON_PROPERTY_REPAIR_MAINTENANCE_TIME,
  CameraProperties.JSON_PROPERTY_ANNUAL_MAINTENANCE_TIME,
  CameraProperties.JSON_PROPERTY_STATE,
  CameraProperties.JSON_PROPERTY_PURPOSE,
  CameraProperties.JSON_PROPERTY_COORDINATES_E_T_R_S89,
  CameraProperties.JSON_PROPERTY_PRESETS,
  CameraProperties.JSON_PROPERTY_NEAREST_WEATHER_STATION_ID
})
public class CameraProperties {
  public static final String JSON_PROPERTY_ROAD_STATION_ID = "roadStationId";
  private Long roadStationId;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  /**
   * Type of camera
   */
  public enum CameraTypeEnum {
    VAPIX("VAPIX"),
    
    VMX_MPC("VMX_MPC"),
    
    VMX_MPH("VMX_MPH"),
    
    D_LINK("D_LINK"),
    
    ZAVIO("ZAVIO"),
    
    ENEO("ENEO"),
    
    BOSCH("BOSCH"),
    
    SONY("SONY"),
    
    HIKVISION("HIKVISION"),
    
    OLD("OLD");

    private String value;

    CameraTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CameraTypeEnum fromValue(String value) {
      for (CameraTypeEnum b : CameraTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CAMERA_TYPE = "cameraType";
  private CameraTypeEnum cameraType;

  public static final String JSON_PROPERTY_COLLECTION_INTERVAL = "collectionInterval";
  private Integer collectionInterval;

  /**
   * Data collection status
   */
  public enum CollectionStatusEnum {
    GATHERING("GATHERING"),
    
    REMOVED_TEMPORARILY("REMOVED_TEMPORARILY"),
    
    REMOVED_PERMANENTLY("REMOVED_PERMANENTLY");

    private String value;

    CollectionStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CollectionStatusEnum fromValue(String value) {
      for (CollectionStatusEnum b : CollectionStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_COLLECTION_STATUS = "collectionStatus";
  private CollectionStatusEnum collectionStatus;

  public static final String JSON_PROPERTY_MUNICIPALITY = "municipality";
  private String municipality;

  public static final String JSON_PROPERTY_MUNICIPALITY_CODE = "municipalityCode";
  private String municipalityCode;

  public static final String JSON_PROPERTY_PROVINCE = "province";
  private String province;

  public static final String JSON_PROPERTY_PROVINCE_CODE = "provinceCode";
  private String provinceCode;

  public static final String JSON_PROPERTY_NAMES = "names";
  private Map<String, String> names = null;

  public static final String JSON_PROPERTY_ROAD_ADDRESS = "roadAddress";
  private RoadAddress roadAddress;

  public static final String JSON_PROPERTY_LIVI_ID = "liviId";
  private String liviId;

  public static final String JSON_PROPERTY_COUNTRY = "country";
  private String country;

  public static final String JSON_PROPERTY_START_TIME = "startTime";
  private OffsetDateTime startTime;

  public static final String JSON_PROPERTY_REPAIR_MAINTENANCE_TIME = "repairMaintenanceTime";
  private OffsetDateTime repairMaintenanceTime;

  public static final String JSON_PROPERTY_ANNUAL_MAINTENANCE_TIME = "annualMaintenanceTime";
  private OffsetDateTime annualMaintenanceTime;

  /**
   * Road station state
   */
  public enum StateEnum {
    OK("OK"),
    
    OK_FAULT_DOUBT_CANCELLED("OK_FAULT_DOUBT_CANCELLED"),
    
    FAULT_DOUBT("FAULT_DOUBT"),
    
    FAULT_CONFIRMED("FAULT_CONFIRMED"),
    
    FAULT_CONFIRMED_NOT_FIXED_IN_NEAR_FUTURE("FAULT_CONFIRMED_NOT_FIXED_IN_NEAR_FUTURE"),
    
    REPAIR_REQUEST_POSTED("REPAIR_REQUEST_POSTED"),
    
    REPAIR_MAINTENANCE_DONE("REPAIR_MAINTENANCE_DONE"),
    
    REPAIR_INTERRUPTED("REPAIR_INTERRUPTED");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATE = "state";
  private StateEnum state;

  public static final String JSON_PROPERTY_PURPOSE = "purpose";
  private String purpose;

  public static final String JSON_PROPERTY_COORDINATES_E_T_R_S89 = "coordinatesETRS89";
  private List<Double> coordinatesETRS89 = new ArrayList<>();

  public static final String JSON_PROPERTY_PRESETS = "presets";
  private List<CameraPreset> presets = null;

  public static final String JSON_PROPERTY_NEAREST_WEATHER_STATION_ID = "nearestWeatherStationId";
  private Long nearestWeatherStationId;

  public CameraProperties() {
  }

  public CameraProperties roadStationId(Long roadStationId) {
    
    this.roadStationId = roadStationId;
    return this;
  }

   /**
   * Road station&#39;s id (naturalId)
   * @return roadStationId
  **/
 
  @ApiModelProperty(required = true, value = "Road station's id (naturalId)")
  @JsonProperty(JSON_PROPERTY_ROAD_STATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getRoadStationId() {
    return roadStationId;
  }


  @JsonProperty(JSON_PROPERTY_ROAD_STATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRoadStationId(Long roadStationId) {
    this.roadStationId = roadStationId;
  }


  public CameraProperties id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Camera id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Camera id")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public CameraProperties name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Common name of road station
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Common name of road station")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public CameraProperties cameraType(CameraTypeEnum cameraType) {
    
    this.cameraType = cameraType;
    return this;
  }

   /**
   * Type of camera
   * @return cameraType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Type of camera")
  @JsonProperty(JSON_PROPERTY_CAMERA_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CameraTypeEnum getCameraType() {
    return cameraType;
  }


  @JsonProperty(JSON_PROPERTY_CAMERA_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCameraType(CameraTypeEnum cameraType) {
    this.cameraType = cameraType;
  }


  public CameraProperties collectionInterval(Integer collectionInterval) {
    
    this.collectionInterval = collectionInterval;
    return this;
  }

   /**
   * Data collection interval [s]
   * @return collectionInterval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Data collection interval [s]")
  @JsonProperty(JSON_PROPERTY_COLLECTION_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCollectionInterval() {
    return collectionInterval;
  }


  @JsonProperty(JSON_PROPERTY_COLLECTION_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCollectionInterval(Integer collectionInterval) {
    this.collectionInterval = collectionInterval;
  }


  public CameraProperties collectionStatus(CollectionStatusEnum collectionStatus) {
    
    this.collectionStatus = collectionStatus;
    return this;
  }

   /**
   * Data collection status
   * @return collectionStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Data collection status")
  @JsonProperty(JSON_PROPERTY_COLLECTION_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CollectionStatusEnum getCollectionStatus() {
    return collectionStatus;
  }


  @JsonProperty(JSON_PROPERTY_COLLECTION_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCollectionStatus(CollectionStatusEnum collectionStatus) {
    this.collectionStatus = collectionStatus;
  }


  public CameraProperties municipality(String municipality) {
    
    this.municipality = municipality;
    return this;
  }

   /**
   * Municipality
   * @return municipality
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Municipality")
  @JsonProperty(JSON_PROPERTY_MUNICIPALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMunicipality() {
    return municipality;
  }


  @JsonProperty(JSON_PROPERTY_MUNICIPALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMunicipality(String municipality) {
    this.municipality = municipality;
  }


  public CameraProperties municipalityCode(String municipalityCode) {
    
    this.municipalityCode = municipalityCode;
    return this;
  }

   /**
   * Municipality code
   * @return municipalityCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Municipality code")
  @JsonProperty(JSON_PROPERTY_MUNICIPALITY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMunicipalityCode() {
    return municipalityCode;
  }


  @JsonProperty(JSON_PROPERTY_MUNICIPALITY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMunicipalityCode(String municipalityCode) {
    this.municipalityCode = municipalityCode;
  }


  public CameraProperties province(String province) {
    
    this.province = province;
    return this;
  }

   /**
   * Province
   * @return province
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Province")
  @JsonProperty(JSON_PROPERTY_PROVINCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProvince() {
    return province;
  }


  @JsonProperty(JSON_PROPERTY_PROVINCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProvince(String province) {
    this.province = province;
  }


  public CameraProperties provinceCode(String provinceCode) {
    
    this.provinceCode = provinceCode;
    return this;
  }

   /**
   * Province code
   * @return provinceCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Province code")
  @JsonProperty(JSON_PROPERTY_PROVINCE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProvinceCode() {
    return provinceCode;
  }


  @JsonProperty(JSON_PROPERTY_PROVINCE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProvinceCode(String provinceCode) {
    this.provinceCode = provinceCode;
  }


  public CameraProperties names(Map<String, String> names) {
    
    this.names = names;
    return this;
  }

  public CameraProperties putNamesItem(String key, String namesItem) {
    if (this.names == null) {
      this.names = new HashMap<>();
    }
    this.names.put(key, namesItem);
    return this;
  }

   /**
   * Map of names [fi, sv, en]
   * @return names
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"fi\":\"Tie 7 Porvoo, Harabacka\",\"sv\":\"Väg 7 Borgå, Harabacka\",\"en\":\"Road 7 Porvoo, Harabacka\"}", value = "Map of names [fi, sv, en]")
  @JsonProperty(JSON_PROPERTY_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getNames() {
    return names;
  }


  @JsonProperty(JSON_PROPERTY_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNames(Map<String, String> names) {
    this.names = names;
  }


  public CameraProperties roadAddress(RoadAddress roadAddress) {
    
    this.roadAddress = roadAddress;
    return this;
  }

   /**
   * Get roadAddress
   * @return roadAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ROAD_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RoadAddress getRoadAddress() {
    return roadAddress;
  }


  @JsonProperty(JSON_PROPERTY_ROAD_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRoadAddress(RoadAddress roadAddress) {
    this.roadAddress = roadAddress;
  }


  public CameraProperties liviId(String liviId) {
    
    this.liviId = liviId;
    return this;
  }

   /**
   * Id in road registry
   * @return liviId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Id in road registry")
  @JsonProperty(JSON_PROPERTY_LIVI_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLiviId() {
    return liviId;
  }


  @JsonProperty(JSON_PROPERTY_LIVI_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLiviId(String liviId) {
    this.liviId = liviId;
  }


  public CameraProperties country(String country) {
    
    this.country = country;
    return this;
  }

   /**
   * Country where station is located
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Country where station is located")
  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCountry() {
    return country;
  }


  @JsonProperty(JSON_PROPERTY_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountry(String country) {
    this.country = country;
  }


  public CameraProperties startTime(OffsetDateTime startTime) {
    
    this.startTime = startTime;
    return this;
  }

   /**
   * Station established date time
   * @return startTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Station established date time")
  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getStartTime() {
    return startTime;
  }


  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public CameraProperties repairMaintenanceTime(OffsetDateTime repairMaintenanceTime) {
    
    this.repairMaintenanceTime = repairMaintenanceTime;
    return this;
  }

   /**
   * Repair maintenance date time
   * @return repairMaintenanceTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Repair maintenance date time")
  @JsonProperty(JSON_PROPERTY_REPAIR_MAINTENANCE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getRepairMaintenanceTime() {
    return repairMaintenanceTime;
  }


  @JsonProperty(JSON_PROPERTY_REPAIR_MAINTENANCE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRepairMaintenanceTime(OffsetDateTime repairMaintenanceTime) {
    this.repairMaintenanceTime = repairMaintenanceTime;
  }


  public CameraProperties annualMaintenanceTime(OffsetDateTime annualMaintenanceTime) {
    
    this.annualMaintenanceTime = annualMaintenanceTime;
    return this;
  }

   /**
   * Annual maintenance date time
   * @return annualMaintenanceTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Annual maintenance date time")
  @JsonProperty(JSON_PROPERTY_ANNUAL_MAINTENANCE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getAnnualMaintenanceTime() {
    return annualMaintenanceTime;
  }


  @JsonProperty(JSON_PROPERTY_ANNUAL_MAINTENANCE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnnualMaintenanceTime(OffsetDateTime annualMaintenanceTime) {
    this.annualMaintenanceTime = annualMaintenanceTime;
  }


  public CameraProperties state(StateEnum state) {
    
    this.state = state;
    return this;
  }

   /**
   * Road station state
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Road station state")
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StateEnum getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(StateEnum state) {
    this.state = state;
  }


  public CameraProperties purpose(String purpose) {
    
    this.purpose = purpose;
    return this;
  }

   /**
   * Purpose of the road station
   * @return purpose
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Purpose of the road station")
  @JsonProperty(JSON_PROPERTY_PURPOSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPurpose() {
    return purpose;
  }


  @JsonProperty(JSON_PROPERTY_PURPOSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPurpose(String purpose) {
    this.purpose = purpose;
  }


  public CameraProperties coordinatesETRS89(List<Double> coordinatesETRS89) {
    
    this.coordinatesETRS89 = coordinatesETRS89;
    return this;
  }

  public CameraProperties addCoordinatesETRS89Item(Double coordinatesETRS89Item) {
    this.coordinatesETRS89.add(coordinatesETRS89Item);
    return this;
  }

   /**
   * Road station coordinates [LONGITUDE, LATITUDE, {ALTITUDE}]. Coordinates are in ETRS89 / ETRS-TM35FIN format. Altitude is optional and measured in metres.)
   * @return coordinatesETRS89
  **/
 
  @ApiModelProperty(required = true, value = "Road station coordinates [LONGITUDE, LATITUDE, {ALTITUDE}]. Coordinates are in ETRS89 / ETRS-TM35FIN format. Altitude is optional and measured in metres.)")
  @JsonProperty(JSON_PROPERTY_COORDINATES_E_T_R_S89)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Double> getCoordinatesETRS89() {
    return coordinatesETRS89;
  }


  @JsonProperty(JSON_PROPERTY_COORDINATES_E_T_R_S89)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCoordinatesETRS89(List<Double> coordinatesETRS89) {
    this.coordinatesETRS89 = coordinatesETRS89;
  }


  public CameraProperties presets(List<CameraPreset> presets) {
    
    this.presets = presets;
    return this;
  }

  public CameraProperties addPresetsItem(CameraPreset presetsItem) {
    if (this.presets == null) {
      this.presets = new ArrayList<>();
    }
    this.presets.add(presetsItem);
    return this;
  }

   /**
   * Camera presets
   * @return presets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Camera presets")
  @JsonProperty(JSON_PROPERTY_PRESETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CameraPreset> getPresets() {
    return presets;
  }


  @JsonProperty(JSON_PROPERTY_PRESETS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPresets(List<CameraPreset> presets) {
    this.presets = presets;
  }


  public CameraProperties nearestWeatherStationId(Long nearestWeatherStationId) {
    
    this.nearestWeatherStationId = nearestWeatherStationId;
    return this;
  }

   /**
   * Id of nearest Weather Station
   * @return nearestWeatherStationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Id of nearest Weather Station")
  @JsonProperty(JSON_PROPERTY_NEAREST_WEATHER_STATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getNearestWeatherStationId() {
    return nearestWeatherStationId;
  }


  @JsonProperty(JSON_PROPERTY_NEAREST_WEATHER_STATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNearestWeatherStationId(Long nearestWeatherStationId) {
    this.nearestWeatherStationId = nearestWeatherStationId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CameraProperties cameraProperties = (CameraProperties) o;
    return Objects.equals(this.roadStationId, cameraProperties.roadStationId) &&
        Objects.equals(this.id, cameraProperties.id) &&
        Objects.equals(this.name, cameraProperties.name) &&
        Objects.equals(this.cameraType, cameraProperties.cameraType) &&
        Objects.equals(this.collectionInterval, cameraProperties.collectionInterval) &&
        Objects.equals(this.collectionStatus, cameraProperties.collectionStatus) &&
        Objects.equals(this.municipality, cameraProperties.municipality) &&
        Objects.equals(this.municipalityCode, cameraProperties.municipalityCode) &&
        Objects.equals(this.province, cameraProperties.province) &&
        Objects.equals(this.provinceCode, cameraProperties.provinceCode) &&
        Objects.equals(this.names, cameraProperties.names) &&
        Objects.equals(this.roadAddress, cameraProperties.roadAddress) &&
        Objects.equals(this.liviId, cameraProperties.liviId) &&
        Objects.equals(this.country, cameraProperties.country) &&
        Objects.equals(this.startTime, cameraProperties.startTime) &&
        Objects.equals(this.repairMaintenanceTime, cameraProperties.repairMaintenanceTime) &&
        Objects.equals(this.annualMaintenanceTime, cameraProperties.annualMaintenanceTime) &&
        Objects.equals(this.state, cameraProperties.state) &&
        Objects.equals(this.purpose, cameraProperties.purpose) &&
        Objects.equals(this.coordinatesETRS89, cameraProperties.coordinatesETRS89) &&
        Objects.equals(this.presets, cameraProperties.presets) &&
        Objects.equals(this.nearestWeatherStationId, cameraProperties.nearestWeatherStationId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(roadStationId, id, name, cameraType, collectionInterval, collectionStatus, municipality, municipalityCode, province, provinceCode, names, roadAddress, liviId, country, startTime, repairMaintenanceTime, annualMaintenanceTime, state, purpose, coordinatesETRS89, presets, nearestWeatherStationId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CameraProperties {\n");
    sb.append("    roadStationId: ").append(toIndentedString(roadStationId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    cameraType: ").append(toIndentedString(cameraType)).append("\n");
    sb.append("    collectionInterval: ").append(toIndentedString(collectionInterval)).append("\n");
    sb.append("    collectionStatus: ").append(toIndentedString(collectionStatus)).append("\n");
    sb.append("    municipality: ").append(toIndentedString(municipality)).append("\n");
    sb.append("    municipalityCode: ").append(toIndentedString(municipalityCode)).append("\n");
    sb.append("    province: ").append(toIndentedString(province)).append("\n");
    sb.append("    provinceCode: ").append(toIndentedString(provinceCode)).append("\n");
    sb.append("    names: ").append(toIndentedString(names)).append("\n");
    sb.append("    roadAddress: ").append(toIndentedString(roadAddress)).append("\n");
    sb.append("    liviId: ").append(toIndentedString(liviId)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    repairMaintenanceTime: ").append(toIndentedString(repairMaintenanceTime)).append("\n");
    sb.append("    annualMaintenanceTime: ").append(toIndentedString(annualMaintenanceTime)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    purpose: ").append(toIndentedString(purpose)).append("\n");
    sb.append("    coordinatesETRS89: ").append(toIndentedString(coordinatesETRS89)).append("\n");
    sb.append("    presets: ").append(toIndentedString(presets)).append("\n");
    sb.append("    nearestWeatherStationId: ").append(toIndentedString(nearestWeatherStationId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

