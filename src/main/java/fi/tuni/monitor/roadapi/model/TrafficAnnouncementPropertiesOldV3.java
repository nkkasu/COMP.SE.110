/*
 * Digitraffic Road API
 * [OpenAPI document](/swagger/openapi.json)   Digitraffic is a service operated by the [Fintraffic](https://www.fintraffic.fi) offering real time traffic information. Currently the service covers *road, marine and rail* traffic. More information can be found at the [Digitraffic website](https://www.digitraffic.fi/)   The service has a public Google-group [road.digitraffic.fi](https://groups.google.com/forum/#!forum/roaddigitrafficfi) for communication between developers, service administrators and Fintraffic. The discussion in the forum is mostly in Finnish, but you're welcome to communicate in English too.   ### General notes of the API * Many Digitraffic APIs use GeoJSON as data format. Definition of the GeoJSON format can be found at https://tools.ietf.org/html/rfc7946. * For dates and times [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format is used with \"Zulu\" zero offset from UTC unless otherwise specified (i.e., \"yyyy-mm-ddThh:mm:ss[.mmm]Z\"). E.g. 2019-11-01T06:30:00Z.
 *
 * The version of the OpenAPI document: 2.94.0#e017ffd@2022-10-18T07:48:28+0000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fi.tuni.monitor.roadapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fi.tuni.monitor.roadapi.model.ContactOldV3;
import fi.tuni.monitor.roadapi.model.SituationTypeOldV1;
import fi.tuni.monitor.roadapi.model.TrafficAnnouncementOldV3;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Traffic Announcement properties
 */
@ApiModel(description = "Traffic Announcement properties")
@JsonPropertyOrder({
  TrafficAnnouncementPropertiesOldV3.JSON_PROPERTY_SITUATION_ID,
  TrafficAnnouncementPropertiesOldV3.JSON_PROPERTY_SITUATION_TYPE,
  TrafficAnnouncementPropertiesOldV3.JSON_PROPERTY_TRAFFIC_ANNOUNCEMENT_TYPE,
  TrafficAnnouncementPropertiesOldV3.JSON_PROPERTY_VERSION,
  TrafficAnnouncementPropertiesOldV3.JSON_PROPERTY_RELEASE_TIME,
  TrafficAnnouncementPropertiesOldV3.JSON_PROPERTY_VERSION_TIME,
  TrafficAnnouncementPropertiesOldV3.JSON_PROPERTY_ANNOUNCEMENTS,
  TrafficAnnouncementPropertiesOldV3.JSON_PROPERTY_CONTACT
})
@JsonTypeName("TrafficAnnouncementProperties_OldV3")
public class TrafficAnnouncementPropertiesOldV3 {
  public static final String JSON_PROPERTY_SITUATION_ID = "situationId";
  private String situationId;

  public static final String JSON_PROPERTY_SITUATION_TYPE = "situationType";
  private SituationTypeOldV1 situationType = SituationTypeOldV1.TRAFFIC_ANNOUNCEMENT;

  /**
   * The type of the traffic announcement. Omitted for other situation types. Note that ended and retracted are not actual types.
   */
  public enum TrafficAnnouncementTypeEnum {
    GENERAL("general"),
    
    PRELIMINARY_ACCIDENT_REPORT("preliminary accident report"),
    
    ACCIDENT_REPORT("accident report"),
    
    UNCONFIRMED_OBSERVATION("unconfirmed observation"),
    
    ENDED("ended"),
    
    RETRACTED("retracted");

    private String value;

    TrafficAnnouncementTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TrafficAnnouncementTypeEnum fromValue(String value) {
      for (TrafficAnnouncementTypeEnum b : TrafficAnnouncementTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TRAFFIC_ANNOUNCEMENT_TYPE = "trafficAnnouncementType";
  private TrafficAnnouncementTypeEnum trafficAnnouncementType;

  public static final String JSON_PROPERTY_VERSION = "version";
  private Integer version;

  public static final String JSON_PROPERTY_RELEASE_TIME = "releaseTime";
  private OffsetDateTime releaseTime;

  public static final String JSON_PROPERTY_VERSION_TIME = "versionTime";
  private OffsetDateTime versionTime;

  public static final String JSON_PROPERTY_ANNOUNCEMENTS = "announcements";
  private List<TrafficAnnouncementOldV3> announcements = new ArrayList<>();

  public static final String JSON_PROPERTY_CONTACT = "contact";
  private ContactOldV3 contact;

  public TrafficAnnouncementPropertiesOldV3() {
  }

  public TrafficAnnouncementPropertiesOldV3 situationId(String situationId) {
    
    this.situationId = situationId;
    return this;
  }

   /**
   * Situation id
   * @return situationId
  **/
 
  @ApiModelProperty(required = true, value = "Situation id")
  @JsonProperty(JSON_PROPERTY_SITUATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSituationId() {
    return situationId;
  }


  @JsonProperty(JSON_PROPERTY_SITUATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSituationId(String situationId) {
    this.situationId = situationId;
  }


  public TrafficAnnouncementPropertiesOldV3 situationType(SituationTypeOldV1 situationType) {
    
    this.situationType = situationType;
    return this;
  }

   /**
   * Get situationType
   * @return situationType
  **/
 
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SITUATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SituationTypeOldV1 getSituationType() {
    return situationType;
  }


  @JsonProperty(JSON_PROPERTY_SITUATION_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSituationType(SituationTypeOldV1 situationType) {
    this.situationType = situationType;
  }


  public TrafficAnnouncementPropertiesOldV3 trafficAnnouncementType(TrafficAnnouncementTypeEnum trafficAnnouncementType) {
    
    this.trafficAnnouncementType = trafficAnnouncementType;
    return this;
  }

   /**
   * The type of the traffic announcement. Omitted for other situation types. Note that ended and retracted are not actual types.
   * @return trafficAnnouncementType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The type of the traffic announcement. Omitted for other situation types. Note that ended and retracted are not actual types.")
  @JsonProperty(JSON_PROPERTY_TRAFFIC_ANNOUNCEMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TrafficAnnouncementTypeEnum getTrafficAnnouncementType() {
    return trafficAnnouncementType;
  }


  @JsonProperty(JSON_PROPERTY_TRAFFIC_ANNOUNCEMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTrafficAnnouncementType(TrafficAnnouncementTypeEnum trafficAnnouncementType) {
    this.trafficAnnouncementType = trafficAnnouncementType;
  }


  public TrafficAnnouncementPropertiesOldV3 version(Integer version) {
    
    this.version = version;
    return this;
  }

   /**
   * Announcement version
   * @return version
  **/
 
  @ApiModelProperty(required = true, value = "Announcement version")
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVersion(Integer version) {
    this.version = version;
  }


  public TrafficAnnouncementPropertiesOldV3 releaseTime(OffsetDateTime releaseTime) {
    
    this.releaseTime = releaseTime;
    return this;
  }

   /**
   * Annoucement release time
   * @return releaseTime
  **/
 
  @ApiModelProperty(required = true, value = "Annoucement release time")
  @JsonProperty(JSON_PROPERTY_RELEASE_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getReleaseTime() {
    return releaseTime;
  }


  @JsonProperty(JSON_PROPERTY_RELEASE_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReleaseTime(OffsetDateTime releaseTime) {
    this.releaseTime = releaseTime;
  }


  public TrafficAnnouncementPropertiesOldV3 versionTime(OffsetDateTime versionTime) {
    
    this.versionTime = versionTime;
    return this;
  }

   /**
   * Annoucement version time
   * @return versionTime
  **/
 
  @ApiModelProperty(required = true, value = "Annoucement version time")
  @JsonProperty(JSON_PROPERTY_VERSION_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getVersionTime() {
    return versionTime;
  }


  @JsonProperty(JSON_PROPERTY_VERSION_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVersionTime(OffsetDateTime versionTime) {
    this.versionTime = versionTime;
  }


  public TrafficAnnouncementPropertiesOldV3 announcements(List<TrafficAnnouncementOldV3> announcements) {
    
    this.announcements = announcements;
    return this;
  }

  public TrafficAnnouncementPropertiesOldV3 addAnnouncementsItem(TrafficAnnouncementOldV3 announcementsItem) {
    this.announcements.add(announcementsItem);
    return this;
  }

   /**
   * Contains announcement&#39;s different language versions available.
   * @return announcements
  **/
 
  @ApiModelProperty(required = true, value = "Contains announcement's different language versions available.")
  @JsonProperty(JSON_PROPERTY_ANNOUNCEMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<TrafficAnnouncementOldV3> getAnnouncements() {
    return announcements;
  }


  @JsonProperty(JSON_PROPERTY_ANNOUNCEMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAnnouncements(List<TrafficAnnouncementOldV3> announcements) {
    this.announcements = announcements;
  }


  public TrafficAnnouncementPropertiesOldV3 contact(ContactOldV3 contact) {
    
    this.contact = contact;
    return this;
  }

   /**
   * Get contact
   * @return contact
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ContactOldV3 getContact() {
    return contact;
  }


  @JsonProperty(JSON_PROPERTY_CONTACT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContact(ContactOldV3 contact) {
    this.contact = contact;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TrafficAnnouncementPropertiesOldV3 trafficAnnouncementPropertiesOldV3 = (TrafficAnnouncementPropertiesOldV3) o;
    return Objects.equals(this.situationId, trafficAnnouncementPropertiesOldV3.situationId) &&
        Objects.equals(this.situationType, trafficAnnouncementPropertiesOldV3.situationType) &&
        Objects.equals(this.trafficAnnouncementType, trafficAnnouncementPropertiesOldV3.trafficAnnouncementType) &&
        Objects.equals(this.version, trafficAnnouncementPropertiesOldV3.version) &&
        Objects.equals(this.releaseTime, trafficAnnouncementPropertiesOldV3.releaseTime) &&
        Objects.equals(this.versionTime, trafficAnnouncementPropertiesOldV3.versionTime) &&
        Objects.equals(this.announcements, trafficAnnouncementPropertiesOldV3.announcements) &&
        Objects.equals(this.contact, trafficAnnouncementPropertiesOldV3.contact);
  }

  @Override
  public int hashCode() {
    return Objects.hash(situationId, situationType, trafficAnnouncementType, version, releaseTime, versionTime, announcements, contact);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TrafficAnnouncementPropertiesOldV3 {\n");
    sb.append("    situationId: ").append(toIndentedString(situationId)).append("\n");
    sb.append("    situationType: ").append(toIndentedString(situationType)).append("\n");
    sb.append("    trafficAnnouncementType: ").append(toIndentedString(trafficAnnouncementType)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    releaseTime: ").append(toIndentedString(releaseTime)).append("\n");
    sb.append("    versionTime: ").append(toIndentedString(versionTime)).append("\n");
    sb.append("    announcements: ").append(toIndentedString(announcements)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

