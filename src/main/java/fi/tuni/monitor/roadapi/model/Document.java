/*
 * Digitraffic Road API
 * [OpenAPI document](/swagger/openapi.json)   Digitraffic is a service operated by the [Fintraffic](https://www.fintraffic.fi) offering real time traffic information. Currently the service covers *road, marine and rail* traffic. More information can be found at the [Digitraffic website](https://www.digitraffic.fi/)   The service has a public Google-group [road.digitraffic.fi](https://groups.google.com/forum/#!forum/roaddigitrafficfi) for communication between developers, service administrators and Fintraffic. The discussion in the forum is mostly in Finnish, but you're welcome to communicate in English too.   ### General notes of the API * Many Digitraffic APIs use GeoJSON as data format. Definition of the GeoJSON format can be found at https://tools.ietf.org/html/rfc7946. * For dates and times [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format is used with \"Zulu\" zero offset from UTC unless otherwise specified (i.e., \"yyyy-mm-ddThh:mm:ss[.mmm]Z\"). E.g. 2019-11-01T06:30:00Z.
 *
 * The version of the OpenAPI document: 2.94.0#e017ffd@2022-10-18T07:48:28+0000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fi.tuni.monitor.roadapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fi.tuni.monitor.roadapi.model.DOMConfiguration;
import fi.tuni.monitor.roadapi.model.DocumentType;
import fi.tuni.monitor.roadapi.model.Element;
import fi.tuni.monitor.roadapi.model.NamedNodeMap;
import fi.tuni.monitor.roadapi.model.Node;
import fi.tuni.monitor.roadapi.model.NodeList;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Document
 */
@JsonPropertyOrder({
  Document.JSON_PROPERTY_IMPLEMENTATION,
  Document.JSON_PROPERTY_DOCTYPE,
  Document.JSON_PROPERTY_DOCUMENT_ELEMENT,
  Document.JSON_PROPERTY_INPUT_ENCODING,
  Document.JSON_PROPERTY_XML_ENCODING,
  Document.JSON_PROPERTY_XML_STANDALONE,
  Document.JSON_PROPERTY_XML_VERSION,
  Document.JSON_PROPERTY_STRICT_ERROR_CHECKING,
  Document.JSON_PROPERTY_DOCUMENT_U_R_I,
  Document.JSON_PROPERTY_DOM_CONFIG,
  Document.JSON_PROPERTY_NODE_NAME,
  Document.JSON_PROPERTY_NODE_VALUE,
  Document.JSON_PROPERTY_PARENT_NODE,
  Document.JSON_PROPERTY_CHILD_NODES,
  Document.JSON_PROPERTY_FIRST_CHILD,
  Document.JSON_PROPERTY_LAST_CHILD,
  Document.JSON_PROPERTY_PREVIOUS_SIBLING,
  Document.JSON_PROPERTY_NEXT_SIBLING,
  Document.JSON_PROPERTY_OWNER_DOCUMENT,
  Document.JSON_PROPERTY_NAMESPACE_U_R_I,
  Document.JSON_PROPERTY_LOCAL_NAME,
  Document.JSON_PROPERTY_BASE_U_R_I,
  Document.JSON_PROPERTY_TEXT_CONTENT,
  Document.JSON_PROPERTY_PREFIX,
  Document.JSON_PROPERTY_NODE_TYPE,
  Document.JSON_PROPERTY_ATTRIBUTES
})
public class Document {
  public static final String JSON_PROPERTY_IMPLEMENTATION = "implementation";
  private Object implementation;

  public static final String JSON_PROPERTY_DOCTYPE = "doctype";
  private DocumentType doctype;

  public static final String JSON_PROPERTY_DOCUMENT_ELEMENT = "documentElement";
  private Element documentElement;

  public static final String JSON_PROPERTY_INPUT_ENCODING = "inputEncoding";
  private String inputEncoding;

  public static final String JSON_PROPERTY_XML_ENCODING = "xmlEncoding";
  private String xmlEncoding;

  public static final String JSON_PROPERTY_XML_STANDALONE = "xmlStandalone";
  private Boolean xmlStandalone;

  public static final String JSON_PROPERTY_XML_VERSION = "xmlVersion";
  private String xmlVersion;

  public static final String JSON_PROPERTY_STRICT_ERROR_CHECKING = "strictErrorChecking";
  private Boolean strictErrorChecking;

  public static final String JSON_PROPERTY_DOCUMENT_U_R_I = "documentURI";
  private String documentURI;

  public static final String JSON_PROPERTY_DOM_CONFIG = "domConfig";
  private DOMConfiguration domConfig;

  public static final String JSON_PROPERTY_NODE_NAME = "nodeName";
  private String nodeName;

  public static final String JSON_PROPERTY_NODE_VALUE = "nodeValue";
  private String nodeValue;

  public static final String JSON_PROPERTY_PARENT_NODE = "parentNode";
  private Node parentNode;

  public static final String JSON_PROPERTY_CHILD_NODES = "childNodes";
  private NodeList childNodes;

  public static final String JSON_PROPERTY_FIRST_CHILD = "firstChild";
  private Node firstChild;

  public static final String JSON_PROPERTY_LAST_CHILD = "lastChild";
  private Node lastChild;

  public static final String JSON_PROPERTY_PREVIOUS_SIBLING = "previousSibling";
  private Node previousSibling;

  public static final String JSON_PROPERTY_NEXT_SIBLING = "nextSibling";
  private Node nextSibling;

  public static final String JSON_PROPERTY_OWNER_DOCUMENT = "ownerDocument";
  private Document ownerDocument;

  public static final String JSON_PROPERTY_NAMESPACE_U_R_I = "namespaceURI";
  private String namespaceURI;

  public static final String JSON_PROPERTY_LOCAL_NAME = "localName";
  private String localName;

  public static final String JSON_PROPERTY_BASE_U_R_I = "baseURI";
  private String baseURI;

  public static final String JSON_PROPERTY_TEXT_CONTENT = "textContent";
  private String textContent;

  public static final String JSON_PROPERTY_PREFIX = "prefix";
  private String prefix;

  public static final String JSON_PROPERTY_NODE_TYPE = "nodeType";
  private Integer nodeType;

  public static final String JSON_PROPERTY_ATTRIBUTES = "attributes";
  private NamedNodeMap attributes;

  public Document() {
  }

  public Document implementation(Object implementation) {
    
    this.implementation = implementation;
    return this;
  }

   /**
   * Get implementation
   * @return implementation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_IMPLEMENTATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getImplementation() {
    return implementation;
  }


  @JsonProperty(JSON_PROPERTY_IMPLEMENTATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImplementation(Object implementation) {
    this.implementation = implementation;
  }


  public Document doctype(DocumentType doctype) {
    
    this.doctype = doctype;
    return this;
  }

   /**
   * Get doctype
   * @return doctype
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DOCTYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentType getDoctype() {
    return doctype;
  }


  @JsonProperty(JSON_PROPERTY_DOCTYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDoctype(DocumentType doctype) {
    this.doctype = doctype;
  }


  public Document documentElement(Element documentElement) {
    
    this.documentElement = documentElement;
    return this;
  }

   /**
   * Get documentElement
   * @return documentElement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DOCUMENT_ELEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Element getDocumentElement() {
    return documentElement;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_ELEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentElement(Element documentElement) {
    this.documentElement = documentElement;
  }


  public Document inputEncoding(String inputEncoding) {
    
    this.inputEncoding = inputEncoding;
    return this;
  }

   /**
   * Get inputEncoding
   * @return inputEncoding
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INPUT_ENCODING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getInputEncoding() {
    return inputEncoding;
  }


  @JsonProperty(JSON_PROPERTY_INPUT_ENCODING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInputEncoding(String inputEncoding) {
    this.inputEncoding = inputEncoding;
  }


  public Document xmlEncoding(String xmlEncoding) {
    
    this.xmlEncoding = xmlEncoding;
    return this;
  }

   /**
   * Get xmlEncoding
   * @return xmlEncoding
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_XML_ENCODING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getXmlEncoding() {
    return xmlEncoding;
  }


  @JsonProperty(JSON_PROPERTY_XML_ENCODING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setXmlEncoding(String xmlEncoding) {
    this.xmlEncoding = xmlEncoding;
  }


  public Document xmlStandalone(Boolean xmlStandalone) {
    
    this.xmlStandalone = xmlStandalone;
    return this;
  }

   /**
   * Get xmlStandalone
   * @return xmlStandalone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_XML_STANDALONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getXmlStandalone() {
    return xmlStandalone;
  }


  @JsonProperty(JSON_PROPERTY_XML_STANDALONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setXmlStandalone(Boolean xmlStandalone) {
    this.xmlStandalone = xmlStandalone;
  }


  public Document xmlVersion(String xmlVersion) {
    
    this.xmlVersion = xmlVersion;
    return this;
  }

   /**
   * Get xmlVersion
   * @return xmlVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_XML_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getXmlVersion() {
    return xmlVersion;
  }


  @JsonProperty(JSON_PROPERTY_XML_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setXmlVersion(String xmlVersion) {
    this.xmlVersion = xmlVersion;
  }


  public Document strictErrorChecking(Boolean strictErrorChecking) {
    
    this.strictErrorChecking = strictErrorChecking;
    return this;
  }

   /**
   * Get strictErrorChecking
   * @return strictErrorChecking
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STRICT_ERROR_CHECKING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getStrictErrorChecking() {
    return strictErrorChecking;
  }


  @JsonProperty(JSON_PROPERTY_STRICT_ERROR_CHECKING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStrictErrorChecking(Boolean strictErrorChecking) {
    this.strictErrorChecking = strictErrorChecking;
  }


  public Document documentURI(String documentURI) {
    
    this.documentURI = documentURI;
    return this;
  }

   /**
   * Get documentURI
   * @return documentURI
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DOCUMENT_U_R_I)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDocumentURI() {
    return documentURI;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_U_R_I)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentURI(String documentURI) {
    this.documentURI = documentURI;
  }


  public Document domConfig(DOMConfiguration domConfig) {
    
    this.domConfig = domConfig;
    return this;
  }

   /**
   * Get domConfig
   * @return domConfig
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DOM_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DOMConfiguration getDomConfig() {
    return domConfig;
  }


  @JsonProperty(JSON_PROPERTY_DOM_CONFIG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomConfig(DOMConfiguration domConfig) {
    this.domConfig = domConfig;
  }


  public Document nodeName(String nodeName) {
    
    this.nodeName = nodeName;
    return this;
  }

   /**
   * Get nodeName
   * @return nodeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NODE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNodeName() {
    return nodeName;
  }


  @JsonProperty(JSON_PROPERTY_NODE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNodeName(String nodeName) {
    this.nodeName = nodeName;
  }


  public Document nodeValue(String nodeValue) {
    
    this.nodeValue = nodeValue;
    return this;
  }

   /**
   * Get nodeValue
   * @return nodeValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NODE_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNodeValue() {
    return nodeValue;
  }


  @JsonProperty(JSON_PROPERTY_NODE_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNodeValue(String nodeValue) {
    this.nodeValue = nodeValue;
  }


  public Document parentNode(Node parentNode) {
    
    this.parentNode = parentNode;
    return this;
  }

   /**
   * Get parentNode
   * @return parentNode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PARENT_NODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Node getParentNode() {
    return parentNode;
  }


  @JsonProperty(JSON_PROPERTY_PARENT_NODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParentNode(Node parentNode) {
    this.parentNode = parentNode;
  }


  public Document childNodes(NodeList childNodes) {
    
    this.childNodes = childNodes;
    return this;
  }

   /**
   * Get childNodes
   * @return childNodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CHILD_NODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NodeList getChildNodes() {
    return childNodes;
  }


  @JsonProperty(JSON_PROPERTY_CHILD_NODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChildNodes(NodeList childNodes) {
    this.childNodes = childNodes;
  }


  public Document firstChild(Node firstChild) {
    
    this.firstChild = firstChild;
    return this;
  }

   /**
   * Get firstChild
   * @return firstChild
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FIRST_CHILD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Node getFirstChild() {
    return firstChild;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_CHILD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstChild(Node firstChild) {
    this.firstChild = firstChild;
  }


  public Document lastChild(Node lastChild) {
    
    this.lastChild = lastChild;
    return this;
  }

   /**
   * Get lastChild
   * @return lastChild
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LAST_CHILD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Node getLastChild() {
    return lastChild;
  }


  @JsonProperty(JSON_PROPERTY_LAST_CHILD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastChild(Node lastChild) {
    this.lastChild = lastChild;
  }


  public Document previousSibling(Node previousSibling) {
    
    this.previousSibling = previousSibling;
    return this;
  }

   /**
   * Get previousSibling
   * @return previousSibling
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PREVIOUS_SIBLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Node getPreviousSibling() {
    return previousSibling;
  }


  @JsonProperty(JSON_PROPERTY_PREVIOUS_SIBLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreviousSibling(Node previousSibling) {
    this.previousSibling = previousSibling;
  }


  public Document nextSibling(Node nextSibling) {
    
    this.nextSibling = nextSibling;
    return this;
  }

   /**
   * Get nextSibling
   * @return nextSibling
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NEXT_SIBLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Node getNextSibling() {
    return nextSibling;
  }


  @JsonProperty(JSON_PROPERTY_NEXT_SIBLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNextSibling(Node nextSibling) {
    this.nextSibling = nextSibling;
  }


  public Document ownerDocument(Document ownerDocument) {
    
    this.ownerDocument = ownerDocument;
    return this;
  }

   /**
   * Get ownerDocument
   * @return ownerDocument
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OWNER_DOCUMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Document getOwnerDocument() {
    return ownerDocument;
  }


  @JsonProperty(JSON_PROPERTY_OWNER_DOCUMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwnerDocument(Document ownerDocument) {
    this.ownerDocument = ownerDocument;
  }


  public Document namespaceURI(String namespaceURI) {
    
    this.namespaceURI = namespaceURI;
    return this;
  }

   /**
   * Get namespaceURI
   * @return namespaceURI
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAMESPACE_U_R_I)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNamespaceURI() {
    return namespaceURI;
  }


  @JsonProperty(JSON_PROPERTY_NAMESPACE_U_R_I)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNamespaceURI(String namespaceURI) {
    this.namespaceURI = namespaceURI;
  }


  public Document localName(String localName) {
    
    this.localName = localName;
    return this;
  }

   /**
   * Get localName
   * @return localName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOCAL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocalName() {
    return localName;
  }


  @JsonProperty(JSON_PROPERTY_LOCAL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocalName(String localName) {
    this.localName = localName;
  }


  public Document baseURI(String baseURI) {
    
    this.baseURI = baseURI;
    return this;
  }

   /**
   * Get baseURI
   * @return baseURI
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BASE_U_R_I)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBaseURI() {
    return baseURI;
  }


  @JsonProperty(JSON_PROPERTY_BASE_U_R_I)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBaseURI(String baseURI) {
    this.baseURI = baseURI;
  }


  public Document textContent(String textContent) {
    
    this.textContent = textContent;
    return this;
  }

   /**
   * Get textContent
   * @return textContent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TEXT_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTextContent() {
    return textContent;
  }


  @JsonProperty(JSON_PROPERTY_TEXT_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTextContent(String textContent) {
    this.textContent = textContent;
  }


  public Document prefix(String prefix) {
    
    this.prefix = prefix;
    return this;
  }

   /**
   * Get prefix
   * @return prefix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrefix() {
    return prefix;
  }


  @JsonProperty(JSON_PROPERTY_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }


  public Document nodeType(Integer nodeType) {
    
    this.nodeType = nodeType;
    return this;
  }

   /**
   * Get nodeType
   * @return nodeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NODE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNodeType() {
    return nodeType;
  }


  @JsonProperty(JSON_PROPERTY_NODE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNodeType(Integer nodeType) {
    this.nodeType = nodeType;
  }


  public Document attributes(NamedNodeMap attributes) {
    
    this.attributes = attributes;
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NamedNodeMap getAttributes() {
    return attributes;
  }


  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttributes(NamedNodeMap attributes) {
    this.attributes = attributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Document document = (Document) o;
    return Objects.equals(this.implementation, document.implementation) &&
        Objects.equals(this.doctype, document.doctype) &&
        Objects.equals(this.documentElement, document.documentElement) &&
        Objects.equals(this.inputEncoding, document.inputEncoding) &&
        Objects.equals(this.xmlEncoding, document.xmlEncoding) &&
        Objects.equals(this.xmlStandalone, document.xmlStandalone) &&
        Objects.equals(this.xmlVersion, document.xmlVersion) &&
        Objects.equals(this.strictErrorChecking, document.strictErrorChecking) &&
        Objects.equals(this.documentURI, document.documentURI) &&
        Objects.equals(this.domConfig, document.domConfig) &&
        Objects.equals(this.nodeName, document.nodeName) &&
        Objects.equals(this.nodeValue, document.nodeValue) &&
        Objects.equals(this.parentNode, document.parentNode) &&
        Objects.equals(this.childNodes, document.childNodes) &&
        Objects.equals(this.firstChild, document.firstChild) &&
        Objects.equals(this.lastChild, document.lastChild) &&
        Objects.equals(this.previousSibling, document.previousSibling) &&
        Objects.equals(this.nextSibling, document.nextSibling) &&
        Objects.equals(this.ownerDocument, document.ownerDocument) &&
        Objects.equals(this.namespaceURI, document.namespaceURI) &&
        Objects.equals(this.localName, document.localName) &&
        Objects.equals(this.baseURI, document.baseURI) &&
        Objects.equals(this.textContent, document.textContent) &&
        Objects.equals(this.prefix, document.prefix) &&
        Objects.equals(this.nodeType, document.nodeType) &&
        Objects.equals(this.attributes, document.attributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(implementation, doctype, documentElement, inputEncoding, xmlEncoding, xmlStandalone, xmlVersion, strictErrorChecking, documentURI, domConfig, nodeName, nodeValue, parentNode, childNodes, firstChild, lastChild, previousSibling, nextSibling, ownerDocument, namespaceURI, localName, baseURI, textContent, prefix, nodeType, attributes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Document {\n");
    sb.append("    implementation: ").append(toIndentedString(implementation)).append("\n");
    sb.append("    doctype: ").append(toIndentedString(doctype)).append("\n");
    sb.append("    documentElement: ").append(toIndentedString(documentElement)).append("\n");
    sb.append("    inputEncoding: ").append(toIndentedString(inputEncoding)).append("\n");
    sb.append("    xmlEncoding: ").append(toIndentedString(xmlEncoding)).append("\n");
    sb.append("    xmlStandalone: ").append(toIndentedString(xmlStandalone)).append("\n");
    sb.append("    xmlVersion: ").append(toIndentedString(xmlVersion)).append("\n");
    sb.append("    strictErrorChecking: ").append(toIndentedString(strictErrorChecking)).append("\n");
    sb.append("    documentURI: ").append(toIndentedString(documentURI)).append("\n");
    sb.append("    domConfig: ").append(toIndentedString(domConfig)).append("\n");
    sb.append("    nodeName: ").append(toIndentedString(nodeName)).append("\n");
    sb.append("    nodeValue: ").append(toIndentedString(nodeValue)).append("\n");
    sb.append("    parentNode: ").append(toIndentedString(parentNode)).append("\n");
    sb.append("    childNodes: ").append(toIndentedString(childNodes)).append("\n");
    sb.append("    firstChild: ").append(toIndentedString(firstChild)).append("\n");
    sb.append("    lastChild: ").append(toIndentedString(lastChild)).append("\n");
    sb.append("    previousSibling: ").append(toIndentedString(previousSibling)).append("\n");
    sb.append("    nextSibling: ").append(toIndentedString(nextSibling)).append("\n");
    sb.append("    ownerDocument: ").append(toIndentedString(ownerDocument)).append("\n");
    sb.append("    namespaceURI: ").append(toIndentedString(namespaceURI)).append("\n");
    sb.append("    localName: ").append(toIndentedString(localName)).append("\n");
    sb.append("    baseURI: ").append(toIndentedString(baseURI)).append("\n");
    sb.append("    textContent: ").append(toIndentedString(textContent)).append("\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    nodeType: ").append(toIndentedString(nodeType)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

