/*
 * Digitraffic Road API
 * [OpenAPI document](/swagger/openapi.json)   Digitraffic is a service operated by the [Fintraffic](https://www.fintraffic.fi) offering real time traffic information. Currently the service covers *road, marine and rail* traffic. More information can be found at the [Digitraffic website](https://www.digitraffic.fi/)   The service has a public Google-group [road.digitraffic.fi](https://groups.google.com/forum/#!forum/roaddigitrafficfi) for communication between developers, service administrators and Fintraffic. The discussion in the forum is mostly in Finnish, but you're welcome to communicate in English too.   ### General notes of the API * Many Digitraffic APIs use GeoJSON as data format. Definition of the GeoJSON format can be found at https://tools.ietf.org/html/rfc7946. * For dates and times [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format is used with \"Zulu\" zero offset from UTC unless otherwise specified (i.e., \"yyyy-mm-ddThh:mm:ss[.mmm]Z\"). E.g. 2019-11-01T06:30:00Z.
 *
 * The version of the OpenAPI document: 2.94.0#e017ffd@2022-10-18T07:48:28+0000
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package fi.tuni.monitor.roadapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import fi.tuni.monitor.roadapi.model.Document;
import fi.tuni.monitor.roadapi.model.NamedNodeMap;
import fi.tuni.monitor.roadapi.model.NodeList;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Node
 */
@JsonPropertyOrder({
  Node.JSON_PROPERTY_NODE_NAME,
  Node.JSON_PROPERTY_NODE_VALUE,
  Node.JSON_PROPERTY_PARENT_NODE,
  Node.JSON_PROPERTY_CHILD_NODES,
  Node.JSON_PROPERTY_FIRST_CHILD,
  Node.JSON_PROPERTY_LAST_CHILD,
  Node.JSON_PROPERTY_PREVIOUS_SIBLING,
  Node.JSON_PROPERTY_NEXT_SIBLING,
  Node.JSON_PROPERTY_OWNER_DOCUMENT,
  Node.JSON_PROPERTY_NAMESPACE_U_R_I,
  Node.JSON_PROPERTY_LOCAL_NAME,
  Node.JSON_PROPERTY_BASE_U_R_I,
  Node.JSON_PROPERTY_TEXT_CONTENT,
  Node.JSON_PROPERTY_PREFIX,
  Node.JSON_PROPERTY_NODE_TYPE,
  Node.JSON_PROPERTY_ATTRIBUTES
})
public class Node {
  public static final String JSON_PROPERTY_NODE_NAME = "nodeName";
  private String nodeName;

  public static final String JSON_PROPERTY_NODE_VALUE = "nodeValue";
  private String nodeValue;

  public static final String JSON_PROPERTY_PARENT_NODE = "parentNode";
  private Node parentNode;

  public static final String JSON_PROPERTY_CHILD_NODES = "childNodes";
  private NodeList childNodes;

  public static final String JSON_PROPERTY_FIRST_CHILD = "firstChild";
  private Node firstChild;

  public static final String JSON_PROPERTY_LAST_CHILD = "lastChild";
  private Node lastChild;

  public static final String JSON_PROPERTY_PREVIOUS_SIBLING = "previousSibling";
  private Node previousSibling;

  public static final String JSON_PROPERTY_NEXT_SIBLING = "nextSibling";
  private Node nextSibling;

  public static final String JSON_PROPERTY_OWNER_DOCUMENT = "ownerDocument";
  private Document ownerDocument;

  public static final String JSON_PROPERTY_NAMESPACE_U_R_I = "namespaceURI";
  private String namespaceURI;

  public static final String JSON_PROPERTY_LOCAL_NAME = "localName";
  private String localName;

  public static final String JSON_PROPERTY_BASE_U_R_I = "baseURI";
  private String baseURI;

  public static final String JSON_PROPERTY_TEXT_CONTENT = "textContent";
  private String textContent;

  public static final String JSON_PROPERTY_PREFIX = "prefix";
  private String prefix;

  public static final String JSON_PROPERTY_NODE_TYPE = "nodeType";
  private Integer nodeType;

  public static final String JSON_PROPERTY_ATTRIBUTES = "attributes";
  private NamedNodeMap attributes;

  public Node() {
  }

  public Node nodeName(String nodeName) {
    
    this.nodeName = nodeName;
    return this;
  }

   /**
   * Get nodeName
   * @return nodeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NODE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNodeName() {
    return nodeName;
  }


  @JsonProperty(JSON_PROPERTY_NODE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNodeName(String nodeName) {
    this.nodeName = nodeName;
  }


  public Node nodeValue(String nodeValue) {
    
    this.nodeValue = nodeValue;
    return this;
  }

   /**
   * Get nodeValue
   * @return nodeValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NODE_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNodeValue() {
    return nodeValue;
  }


  @JsonProperty(JSON_PROPERTY_NODE_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNodeValue(String nodeValue) {
    this.nodeValue = nodeValue;
  }


  public Node parentNode(Node parentNode) {
    
    this.parentNode = parentNode;
    return this;
  }

   /**
   * Get parentNode
   * @return parentNode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PARENT_NODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Node getParentNode() {
    return parentNode;
  }


  @JsonProperty(JSON_PROPERTY_PARENT_NODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParentNode(Node parentNode) {
    this.parentNode = parentNode;
  }


  public Node childNodes(NodeList childNodes) {
    
    this.childNodes = childNodes;
    return this;
  }

   /**
   * Get childNodes
   * @return childNodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CHILD_NODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NodeList getChildNodes() {
    return childNodes;
  }


  @JsonProperty(JSON_PROPERTY_CHILD_NODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChildNodes(NodeList childNodes) {
    this.childNodes = childNodes;
  }


  public Node firstChild(Node firstChild) {
    
    this.firstChild = firstChild;
    return this;
  }

   /**
   * Get firstChild
   * @return firstChild
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FIRST_CHILD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Node getFirstChild() {
    return firstChild;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_CHILD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstChild(Node firstChild) {
    this.firstChild = firstChild;
  }


  public Node lastChild(Node lastChild) {
    
    this.lastChild = lastChild;
    return this;
  }

   /**
   * Get lastChild
   * @return lastChild
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LAST_CHILD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Node getLastChild() {
    return lastChild;
  }


  @JsonProperty(JSON_PROPERTY_LAST_CHILD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastChild(Node lastChild) {
    this.lastChild = lastChild;
  }


  public Node previousSibling(Node previousSibling) {
    
    this.previousSibling = previousSibling;
    return this;
  }

   /**
   * Get previousSibling
   * @return previousSibling
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PREVIOUS_SIBLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Node getPreviousSibling() {
    return previousSibling;
  }


  @JsonProperty(JSON_PROPERTY_PREVIOUS_SIBLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPreviousSibling(Node previousSibling) {
    this.previousSibling = previousSibling;
  }


  public Node nextSibling(Node nextSibling) {
    
    this.nextSibling = nextSibling;
    return this;
  }

   /**
   * Get nextSibling
   * @return nextSibling
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NEXT_SIBLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Node getNextSibling() {
    return nextSibling;
  }


  @JsonProperty(JSON_PROPERTY_NEXT_SIBLING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNextSibling(Node nextSibling) {
    this.nextSibling = nextSibling;
  }


  public Node ownerDocument(Document ownerDocument) {
    
    this.ownerDocument = ownerDocument;
    return this;
  }

   /**
   * Get ownerDocument
   * @return ownerDocument
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OWNER_DOCUMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Document getOwnerDocument() {
    return ownerDocument;
  }


  @JsonProperty(JSON_PROPERTY_OWNER_DOCUMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwnerDocument(Document ownerDocument) {
    this.ownerDocument = ownerDocument;
  }


  public Node namespaceURI(String namespaceURI) {
    
    this.namespaceURI = namespaceURI;
    return this;
  }

   /**
   * Get namespaceURI
   * @return namespaceURI
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAMESPACE_U_R_I)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNamespaceURI() {
    return namespaceURI;
  }


  @JsonProperty(JSON_PROPERTY_NAMESPACE_U_R_I)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNamespaceURI(String namespaceURI) {
    this.namespaceURI = namespaceURI;
  }


  public Node localName(String localName) {
    
    this.localName = localName;
    return this;
  }

   /**
   * Get localName
   * @return localName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOCAL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocalName() {
    return localName;
  }


  @JsonProperty(JSON_PROPERTY_LOCAL_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocalName(String localName) {
    this.localName = localName;
  }


  public Node baseURI(String baseURI) {
    
    this.baseURI = baseURI;
    return this;
  }

   /**
   * Get baseURI
   * @return baseURI
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BASE_U_R_I)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBaseURI() {
    return baseURI;
  }


  @JsonProperty(JSON_PROPERTY_BASE_U_R_I)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBaseURI(String baseURI) {
    this.baseURI = baseURI;
  }


  public Node textContent(String textContent) {
    
    this.textContent = textContent;
    return this;
  }

   /**
   * Get textContent
   * @return textContent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TEXT_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTextContent() {
    return textContent;
  }


  @JsonProperty(JSON_PROPERTY_TEXT_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTextContent(String textContent) {
    this.textContent = textContent;
  }


  public Node prefix(String prefix) {
    
    this.prefix = prefix;
    return this;
  }

   /**
   * Get prefix
   * @return prefix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPrefix() {
    return prefix;
  }


  @JsonProperty(JSON_PROPERTY_PREFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }


  public Node nodeType(Integer nodeType) {
    
    this.nodeType = nodeType;
    return this;
  }

   /**
   * Get nodeType
   * @return nodeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NODE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getNodeType() {
    return nodeType;
  }


  @JsonProperty(JSON_PROPERTY_NODE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNodeType(Integer nodeType) {
    this.nodeType = nodeType;
  }


  public Node attributes(NamedNodeMap attributes) {
    
    this.attributes = attributes;
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public NamedNodeMap getAttributes() {
    return attributes;
  }


  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttributes(NamedNodeMap attributes) {
    this.attributes = attributes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Node node = (Node) o;
    return Objects.equals(this.nodeName, node.nodeName) &&
        Objects.equals(this.nodeValue, node.nodeValue) &&
        Objects.equals(this.parentNode, node.parentNode) &&
        Objects.equals(this.childNodes, node.childNodes) &&
        Objects.equals(this.firstChild, node.firstChild) &&
        Objects.equals(this.lastChild, node.lastChild) &&
        Objects.equals(this.previousSibling, node.previousSibling) &&
        Objects.equals(this.nextSibling, node.nextSibling) &&
        Objects.equals(this.ownerDocument, node.ownerDocument) &&
        Objects.equals(this.namespaceURI, node.namespaceURI) &&
        Objects.equals(this.localName, node.localName) &&
        Objects.equals(this.baseURI, node.baseURI) &&
        Objects.equals(this.textContent, node.textContent) &&
        Objects.equals(this.prefix, node.prefix) &&
        Objects.equals(this.nodeType, node.nodeType) &&
        Objects.equals(this.attributes, node.attributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nodeName, nodeValue, parentNode, childNodes, firstChild, lastChild, previousSibling, nextSibling, ownerDocument, namespaceURI, localName, baseURI, textContent, prefix, nodeType, attributes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Node {\n");
    sb.append("    nodeName: ").append(toIndentedString(nodeName)).append("\n");
    sb.append("    nodeValue: ").append(toIndentedString(nodeValue)).append("\n");
    sb.append("    parentNode: ").append(toIndentedString(parentNode)).append("\n");
    sb.append("    childNodes: ").append(toIndentedString(childNodes)).append("\n");
    sb.append("    firstChild: ").append(toIndentedString(firstChild)).append("\n");
    sb.append("    lastChild: ").append(toIndentedString(lastChild)).append("\n");
    sb.append("    previousSibling: ").append(toIndentedString(previousSibling)).append("\n");
    sb.append("    nextSibling: ").append(toIndentedString(nextSibling)).append("\n");
    sb.append("    ownerDocument: ").append(toIndentedString(ownerDocument)).append("\n");
    sb.append("    namespaceURI: ").append(toIndentedString(namespaceURI)).append("\n");
    sb.append("    localName: ").append(toIndentedString(localName)).append("\n");
    sb.append("    baseURI: ").append(toIndentedString(baseURI)).append("\n");
    sb.append("    textContent: ").append(toIndentedString(textContent)).append("\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    nodeType: ").append(toIndentedString(nodeType)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

